process.env.PORT = 3020;
let expect = require('chai').expect;
let userData = require('./data/user');
let chai = require('chai');
chai.use(require('chai-http'));

let request = chai.request.agent(app);
let UserService = require('../backend/services/userService');
let ProjectService = require('../backend/services/projectService');
let app = require('../server');

// eslint-disable-next-line
let token, projectId, anotherUser, log = obj => console.log(obj);

describe('Slack API', function () {
    this.timeout(20000);

    before(function (done) {
        this.timeout(30000);
        request.post('/user/signup').send(userData.user).end(function (err, res) {
            projectId = res.body.projectId;
            request.post('/user/login').send({
                email: userData.user.email,
                password: userData.user.password
            }).end(function (err, res) {
                token = res.body.tokens.jwtAccessToken;
                done();
            });
        });
    });

    after(function () {
        ProjectService.deleteProject(projectId);
        UserService.removeUserByEmail([userData.user.email, 'noreply@fyipe.com']);
    });

    // 'post /slack/:projectId/monitor'
    it('The purchase', function (done) {
        request.get(`/team/${projectId}/team`).send({
            name: 'New Schedule',
        }).end(function (err, res) {
            expect(res).to.have.status(400);
            done();
        });
    });

    it('The purchase', function (done) {
        let authorization = `Basic ${token}`;
        request.get(`/slack/${projectId}/:teamId`)
            .set('Authorization', authorization)
            .end(function (err, res) {
                expect(res).to.have.status(200);
                expect(res.body).to.be.an('array');
                done();
            });
    });

});