# This is the staging Kubectl config which is used to run the staging cluster in Kubernetes.
#
# IMPORTANT: ANY CHANGE TO THIS FILE SHOULD BE ACCOMPANIED WITH CHANGES TO test-server.yaml
#

apiVersion: apps/v1
kind: Deployment
metadata:
  name: dashboard
  labels:
    app: dashboard
spec:
  selector:
    matchLabels:
      app: dashboard
  replicas: 1
  template:
    metadata:
      labels:
        app: dashboard
    spec:
      containers:
        - image: registry.gitlab.com/fyipe-project/dashboard:master
          name: dashboard
          imagePullPolicy: IfNotPresent
          env:
            - name: FYIPE_HOSTED
              value: "true"
            - name: HOST
              value: "https://staging-dashboard.fyipe.com"
            - name: ACCOUNTS_HOST
              value: "https://staging-accounts.fyipe.com"
            - name: BACKEND_HOST
              value: "https://staging-api.fyipe.com"
            - name: DOMAIN
              value: ".fyipe.com"
          ports:
            - containerPort: 3000
              hostPort: 3000
              name: dashboard
      restartPolicy: Always
      imagePullSecrets:
        - name: gitlabcredv2
---
# Fyipe Dashoard Service
apiVersion: v1
kind: Service
metadata:
  labels:
    app: dashboard
  name: dashboard
spec:
  ports:
    - port: 80
      protocol: TCP
      targetPort: 3000
  selector:
    app: dashboard
  type: LoadBalancer
---
# Fyipe App Accounts Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: accounts
  labels:
    app: accounts
spec:
  selector:
    matchLabels:
      app: accounts
  replicas: 1
  template:
    metadata:
      labels:
        app: accounts
    spec:
      containers:
        - image: registry.gitlab.com/fyipe-project/accounts:master
          name: accounts
          imagePullPolicy: IfNotPresent
          env:
            - name: FYIPE_HOSTED
              value: "true"
            - name: HOST
              value: "https://staging-accounts.fyipe.com"
            - name: DASHBOARD_HOST
              value: "https://staging-dashboard.fyipe.com"
            - name: BACKEND_HOST
              value: "https://staging-api.fyipe.com"
            - name: DOMAIN
              value: ".fyipe.com"
          ports:
            - containerPort: 3003
              hostPort: 3003
              name: accounts
      restartPolicy: Always
      imagePullSecrets:
        - name: gitlabcredv2
---
# Fyipe Accounts Service
apiVersion: v1
kind: Service
metadata:
  labels:
    app: accounts
  name: accounts
spec:
  ports:
    - port: 80
      protocol: TCP
      targetPort: 3003
  selector:
    app: accounts
  type: LoadBalancer
---
# Fyipe Backend Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  labels:
    app: backend
spec:
  selector:
    matchLabels:
      app: backend
  replicas: 1
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
        - image: registry.gitlab.com/fyipe-project/backend:master
          name: backend
          imagePullPolicy: IfNotPresent
          env:
            - name: FYIPE_HOSTED
              value: "true"
            - name: JWT_SECRET
              value: "idfn3873458973457453"
            - name: MONGO_URL
              value: "mongodb://admin:372b60f4-704c-4205-8e5c-45cdbf44b1fc@mongo-0.mongo-headless.default.svc.cluster.local:27017,mongo-1.mongo-headless.default.svc.cluster.local:27017,mongo-2.mongo-headless.default.svc.cluster.local:27017/fyipedb?replicaSet=fyipe"
            - name: REDIS_HOST
              value: redis-cluster
            - name: REDIS_PORT
              value: "6379"
            - name: STRIPE_PUBLIC_KEY
              value: "pk_test_4I2S0sD0TYJxEWQTYlC2Rk6E"
            - name: STRIPE_PRIVATE_KEY
              value: "sk_test_YxwnzywggtAd8jDaHecNmHiN"
            - name: PORT
              value: "3002"
            - name: MAIL_USER
              value: "noreply@fyipe.com"
            - name: MAIL_PASSWORD
              value: "gBote8sHiWpbxGEJo9Puv8cevW"
            - name: MAIL_SERVER_SMTP
              value: "mail.hackerbay.io"
            - name: MAIL_PORT_SMTP
              value: "587"
            - name: MAIL_SERVER_IMAP
              value: "mail.hackerbay.io"
            - name: MAIL_PORT_IMAP
              value: "993"
            - name: MAIL_FROM
              value: "noreply@fyipe.com"
            - name: EMAIL_VERIFY_TIME
              value: "3600"
            - name: MAIL_SECURE
              value: "false"
            - name: DASHBOARD_HOST
              value: "https://staging-dashboard.fyipe.com"
            - name: BACKEND_HOST
              value: "https://staging-api.fyipe.com"
            - name: ACCOUNTS_HOST
              value: "https://staging-accounts.fyipe.com"
            - name: CLUSTER_KEY
              value: "lkjdfsas-89ul-et5r-jmkf-u98pura8r89e"
            - name: HOME_HOST
              value: "https://staging.fyipe.com"
          ports:
            - containerPort: 3002
              hostPort: 3002
              name: backend
      restartPolicy: Always
      imagePullSecrets:
        - name: gitlabcredv2
---
# Fyipe Backend Deployment
apiVersion: v1
kind: Service
metadata:
  labels:
    app: backend
  name: backend
spec:
  ports:
    - port: 80
      protocol: TCP
      targetPort: 3002
  selector:
    app: backend
  type: LoadBalancer
---
# Fyipe Home
apiVersion: apps/v1
kind: Deployment
metadata:
  name: home
  labels:
    app: home
spec:
  selector:
    matchLabels:
      app: home
  replicas: 1
  template:
    metadata:
      labels:
        app: home
    spec:
      containers:
        - image: registry.gitlab.com/fyipe-project/home:master
          name: home
          imagePullPolicy: IfNotPresent
          env:
            - name: FYIPE_HOSTED
              value: "true"
          ports:
            - containerPort: 1444
              hostPort: 1444
              name: home
      restartPolicy: Always
      imagePullSecrets:
        - name: gitlabcredv2
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: home
  name: home
spec:
  ports:
    - port: 80
      protocol: TCP
      targetPort: 1444
  selector:
    app: home
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: status-page
  labels:
    app: status-page
spec:
  selector:
    matchLabels:
      app: status-page
  replicas: 1
  template:
    metadata:
      labels:
        app: status-page
    spec:
      containers:
        - image: registry.gitlab.com/fyipe-project/status-page:master
          name: status-page
          imagePullPolicy: IfNotPresent
          env:
            - name: FYIPE_HOSTED
              value: "true"
          ports:
            - containerPort: 3006
              hostPort: 3006
              name: status-page
      restartPolicy: Always
      imagePullSecrets:
        - name: gitlabcredv2
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: status-page
  name: status-page
spec:
  ports:
    - port: 80
      protocol: TCP
      targetPort: 3006
  selector:
    app: status-page
  type: LoadBalancer
---
# Probe service and deployement
apiVersion: apps/v1
kind: Deployment
metadata:
  name: probe
  labels:
    app: probe
spec:
  selector:
    matchLabels:
      app: probe
  replicas: 1
  template:
    metadata:
      labels:
        app: probe
    spec:
      containers:
        - image: registry.gitlab.com/fyipe-project/probe:master
          name: probe
          imagePullPolicy: IfNotPresent
          env:
            - name: FYIPE_HOSTED
              value: "true"
            - name: SERVER_URL
              value: "https://staging-api.fyipe.com"
            - name: PORT
              value: "3008"
            - name: PROBE_NAME
              value: "EU"
            - name: PROBE_KEY
              value: "lkjdfsas-89ul-et5r-jmkf-u98pura8r89e"
          ports:
            - containerPort: 3008
              hostPort: 3008
              name: probe
      restartPolicy: Always
      imagePullSecrets:
        - name: gitlabcredv2
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: probe
  name: probe
spec:
  ports:
    - port: 80
      protocol: TCP
      targetPort: 3008
  selector:
    app: probe
  type: LoadBalancer
---
apiVersion: v1
kind: Service
metadata:
  name: mongo-headless
  labels:
    name: mongo-headless
spec:
  ports:
    - port: 27017
      targetPort: 27017
  clusterIP: None
  selector:
    role: mongo
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: redis-cluster
  name: redis-cluster
spec:
  ports:
    - port: 6379
      targetPort: 6379
      name: client
    - port: 16379
      targetPort: 16379
      name: gossip
  selector:
    app: redis-cluster
  type: ClusterIP
---
# stateful set config for mongo
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongo
spec:
  serviceName: "mongo-headless"
  replicas: 3
  selector:
    matchLabels:
      role: mongo
  template:
    metadata:
      labels:
        role: mongo
        environment: production
    spec:
      terminationGracePeriodSeconds: 10
      containers:
        - name: mongo
          image: mongo:4.0
          command: ["/bin/sh", "-c"]
          args:
            [
              "echo 2J2W5Jm7G38y169r8s5T1dW > mongo.key; chmod 600 mongo.key; mongod --replSet fyipe --keyFile mongo.key --smallfiles --noprealloc --bind_ip_all",
            ]
          ports:
            - containerPort: 27017
          volumeMounts:
            - name: persistent-storage
              mountPath: /data/db
  volumeClaimTemplates:
    - metadata:
        name: persistent-storage
        annotations:
          volume.beta.kubernetes.io/storage-class: productiondata
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 900Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-cluster
data:
  update-node.sh: |
    #!/bin/sh
    REDIS_NODES="/data/nodes.conf"
    sed -i -e "/myself/ s/[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}/${POD_IP}/" ${REDIS_NODES}
    exec "$@"
  redis.conf: |+
    cluster-enabled yes
    cluster-require-full-coverage no
    cluster-node-timeout 15000
    cluster-config-file /data/nodes.conf
    cluster-migration-barrier 1
    appendonly yes
    protected-mode no
---
# stateful set config for redis
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis-cluster
spec:
  serviceName: redis-cluster
  replicas: 6
  selector:
    matchLabels:
      app: redis-cluster
  template:
    metadata:
      labels:
        app: redis-cluster
    spec:
      containers:
        - name: redis
          image: redis:5.0.1-alpine
          command: ["/conf/update-node.sh", "redis-server", "/conf/redis.conf"]
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          ports:
            - containerPort: 6379
              name: client
            - containerPort: 16379
              name: gossip
          volumeMounts:
            - name: conf
              mountPath: /conf
              readOnly: false
            - name: data
              mountPath: /data
              readOnly: false
          volumes:
            - name: conf
              configMap:
                name: redis-cluster
                defaultMode: 0755
  volumeClaimTemplate:
    - metadata:
        name: data
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 1Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongo-backup-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 900Gi
  storageClassName: primarybackup
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongo-secondary-backup-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 900Gi
  storageClassName: secondbackup
---
apiVersion: v1
kind: ReplicationController
metadata:
  labels:
    name: mongo-backup-primary
  name: mongo-backup-primary
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: mongo-backup-primary
    spec:
      containers:
        - image: tutum/mongodb-backup
          name: mongodb-backup
          ports:
            - name: mongo
              containerPort: 27017
              hostPort: 27017
          env:
            - name: MAX_BACKUPS
              value: "15"
            - name: MONGODB_USER
              value: "admin"
            - name: MONGODB_PASS
              value: "372b60f4-704c-4205-8e5c-45cdbf44b1fc"
            - name: MONGODB_HOST
              value: "mongo-0.mongo-headless.default.svc.cluster.local"
            - name: MONGODB_PORT
              value: "27017"
          volumeMounts:
            - name: mongo-backup
              mountPath: /backup
      volumes:
        - name: mongo-backup
          persistentVolumeClaim:
            claimName: mongo-backup-pvc
---
apiVersion: v1
kind: ReplicationController
metadata:
  labels:
    name: mongo-backup-secondary
  name: mongo-backup-secondary
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: mongo-backup-secondary
    spec:
      containers:
        - image: tutum/mongodb-backup
          name: mongodb-backup
          ports:
            - name: mongo
              containerPort: 27017
              hostPort: 27017
          env:
            - name: MAX_BACKUPS
              value: "15"
            - name: MONGODB_USER
              value: "admin"
            - name: MONGODB_PASS
              value: "372b60f4-704c-4205-8e5c-45cdbf44b1fc"
            - name: MONGODB_HOST
              value: "mongo-0.mongo-headless.default.svc.cluster.local"
            - name: MONGODB_PORT
              value: "27017"
          volumeMounts:
            - name: mongo-backup
              mountPath: /backup
      volumes:
        - name: mongo-backup
          persistentVolumeClaim:
            claimName: mongo-secondary-backup-pvc
---
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: productiondata
provisioner: kubernetes.io/gce-pd
parameters:
  type: pd-ssd
reclaimPolicy: Retain
---
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: primarybackup
provisioner: kubernetes.io/gce-pd
parameters:
  type: pd-standard
reclaimPolicy: Retain
---
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: secondbackup
provisioner: kubernetes.io/gce-pd
parameters:
  type: pd-standard
reclaimPolicy: Retain
---

