##############
# PLEASE READ:
# This is the production Kubectl config which is used to run the production cluster in Kubernetes.
#
# IMPORTANT: ANY CHANGE TO THIS FILE SHOULD BE ACCOMPANIED WITH CHANGES TO ci-server.yaml, server.yaml, and production-server.yaml
##############



############-----DASHBOARD----#############################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dashboard
  labels:
    app: dashboard
spec:
  selector:
    matchLabels:
      app: dashboard
  replicas: 3
  template:
    metadata:
      labels:
        app: dashboard
    spec:
      containers:
        - image: registry.gitlab.com/fyipe-project/dashboard:latest
          name: dashboard
          imagePullPolicy: Always
          env:
            - name: IS_SAAS_SERVICE
              value: "true"
            - name: HOST
              value: "https://dashboard.fyipe.com"
            - name: ACCOUNTS_HOST
              value: "https://accounts.fyipe.com"
            - name: BACKEND_HOST
              value: "https://api.fyipe.com"
            - name: DOMAIN
              value: "fyipe.com"
            - name: STRIPE_PUBLIC_KEY
              value: "pk_live_j4tvMzviY2MUsRdWvDI8vN8B"
            - name: AMPLITUDE_PUBLIC_KEY
              value: "cb70632f45c1ca7fe6180812c0d6494a"
          ports:
            - containerPort: 3000
              hostPort: 3000
              name: dashboard
      restartPolicy: Always
      imagePullSecrets:
        - name: gitlabcredv2
---

# Fyipe Dashoard Service
apiVersion: v1
kind: Service
metadata:
  labels:
    app: dashboard
  name: dashboard
spec:
  ports:
    - port: 80
      protocol: TCP
      targetPort: 3000
  selector:
    app: dashboard
  type: LoadBalancer
---
#########################################



############-----ACCOUNTS----#############################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: accounts
  labels:
    app: accounts
spec:
  selector:
    matchLabels:
      app: accounts
  replicas: 3
  template:
    metadata:
      labels:
        app: accounts
    spec:
      containers:
        - image: registry.gitlab.com/fyipe-project/accounts:latest
          name: accounts
          imagePullPolicy: Always
          env:
            - name: IS_SAAS_SERVICE
              value: "true"
            - name: HOST
              value: "https://accounts.fyipe.com"
            - name: DASHBOARD_HOST
              value: "https://dashboard.fyipe.com"
            - name: BACKEND_HOST
              value: "https://api.fyipe.com"
            - name: DOMAIN
              value: "fyipe.com"
            - name: STRIPE_PUBLIC_KEY
              value: "pk_live_j4tvMzviY2MUsRdWvDI8vN8B"
            - name: AMPLITUDE_PUBLIC_KEY
              value: "cb70632f45c1ca7fe6180812c0d6494a"
          ports:
            - containerPort: 3003
              hostPort: 3003
              name: accounts
      restartPolicy: Always
      imagePullSecrets:
        - name: gitlabcredv2
---


# Fyipe Accounts Service
apiVersion: v1
kind: Service
metadata:
  labels:
    app: accounts
  name: accounts
spec:
  ports:
    - port: 80
      protocol: TCP
      targetPort: 3003
  selector:
    app: accounts
  type: LoadBalancer
---
###########################################


###########-----BACKEND------##############

# Fyipe Backend Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  labels:
    app: backend
spec:
  selector:
    matchLabels:
      app: backend
  replicas: 3
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
        - image: registry.gitlab.com/fyipe-project/backend:latest
          name: backend
          imagePullPolicy: Always
          env:
            - name: IS_SAAS_SERVICE
              value: "true"
            - name: JWT_SECRET
              value: "idfn3873458973457453"
            - name: MONGO_URL
              value: "mongodb://admin:372b60f4-704c-4205-8e5c-45cdbf44b1fc@mongo-0.mongo-headless.default.svc.cluster.local:27017,mongo-1.mongo-headless.default.svc.cluster.local:27017,mongo-2.mongo-headless.default.svc.cluster.local:27017/fyipedb?replicaSet=fyipe"
            - name: REDIS_HOST
              valueFrom:
                configMapKeyRef:
                  name: redis-host
                  key: REDIS_HOST
            - name: REDIS_PORT
              value: "6379"
            - name: STRIPE_PUBLIC_KEY
              value: "pk_live_j4tvMzviY2MUsRdWvDI8vN8B"
            - name: STRIPE_PRIVATE_KEY
              value: "sk_live_ADLzzMrOCz0kyYTsxWatAqxh"
            - name: PORT
              value: "3002"
            - name: EMAIL_ENABLED
              value: "true"  
            - name: CALL_ENABLED
              value: "true"
            - name: SMS_ENABLED
              value: "true"
            - name: MAIL_USER
              value: "noreply@fyipe.com"
            - name: MAIL_PASSWORD
              value: "qZzsbeYJAxJccf9FwgdZvip3nr9mhmofD"
            - name: MAIL_FROM
              value: "Fyipe"
            - name: MAIL_SERVER_SMTP
              value: "smtp.google.com"
            - name: MAIL_PORT_SMTP
              value: "465"
            - name: MAIL_SMTP_SECURE
              value: "true"
            - name: EMAIL_VERIFY_TIME
              value: "3600"
            - name: BACKEND_HOST
              value: "https://api.fyipe.com"
            - name: ACCOUNTS_HOST
              value: "https://accounts.fyipe.com"
            - name: HOME_HOST
              value: "https://fyipe.com"
            - name: DASHBOARD_HOST
              value: "https://dashboard.fyipe.com"
            - name: NODE_ENV
              value: "production"
            - name: RATE_LIMITTER_TIME_PERIOD_IN_MS
              value: "216000"
            - name: RATE_LIMITTER_REQUEST_LIMIT
              value: "5000"
            - name: RATE_LIMITTER_ENABLED
              value: "false"
            - name: AIRTABLE_API_KEY
              value: "keyenXfDDP4Dutazt"
            - name: AIRTABLE_BASE_ID
              value: "appff3DtEBUNxGN9W"
          ports:
            - containerPort: 3002
              hostPort: 3002
              name: backend
      restartPolicy: Always
      imagePullSecrets:
        - name: gitlabcredv2
---
# Fyipe Backend Deployment
apiVersion: v1
kind: Service
metadata:
  labels:
    app: backend
  name: backend
spec:
  ports:
    - port: 80
      protocol: TCP
      targetPort: 3002
  selector:
    app: backend
  type: LoadBalancer
---
###########################################


###########-----SLACK------##############
# Slack
apiVersion: apps/v1
kind: Deployment
metadata:
  name: slack
  labels:
    app: slack
spec:
  selector:
    matchLabels:
      app: slack
  replicas: 1
  template:
    metadata:
      labels:
        app: slack
    spec:
      containers:
        - image: registry.gitlab.com/fyipe-project/slack:latest
          name: slack
          imagePullPolicy: Always
          ports:
            - containerPort: 1267
              hostPort: 1267
              name: slack
      restartPolicy: Always
      imagePullSecrets:
        - name: gitlabcredv2
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: slack
  name: slack
spec:
  ports:
    - port: 80
      protocol: TCP
      targetPort: 1267
  selector:
    app: slack
  type: LoadBalancer
---
###########################################


###########-----HOME------#################
# Fyipe Home
apiVersion: apps/v1
kind: Deployment
metadata:
  name: home
  labels:
    app: home
spec:
  selector:
    matchLabels:
      app: home
  replicas: 3
  template:
    metadata:
      labels:
        app: home
    spec:
      containers:
        - image: registry.gitlab.com/fyipe-project/home:latest
          name: home
          imagePullPolicy: Always
          env:
            - name: IS_SAAS_SERVICE
              value: "true"
            - name: HOST
              value: "https://fyipe.com"
            - name: DASHBOARD_HOST
              value: "https://dashboard.fyipe.com"
            - name: BACKEND_HOST
              value: "https://api.fyipe.com"
            - name: ACCOUNTS_HOST
              value: "https://accounts.fyipe.com"
          ports:
            - containerPort: 1444
              hostPort: 1444
              name: home
      restartPolicy: Always
      imagePullSecrets:
        - name: gitlabcredv2
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: home
  name: home
spec:
  ports:
    - port: 80
      protocol: TCP
      targetPort: 1444
  selector:
    app: home
  type: LoadBalancer
---
###########################################

###########-----API-DOCS------##############

# Fyipe API docs Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-docs
  labels:
    app: api-docs
spec:
  selector:
    matchLabels:
      app: api-docs
  replicas: 1
  template:
    metadata:
      labels:
        app: api-docs
    spec:
      containers:
        - image: registry.gitlab.com/fyipe-project/api-docs:latest
          name: api-docs
          imagePullPolicy: Always
          env:
            - name: IS_SAAS_SERVICE
              value: "true"
            - name: HOST
              value: "https://docs.fyipe.com"
            - name: BACKEND_HOST
              value: "https://api.fyipe.com"
            - name: DASHBOARD_HOST
              value: "https://dashboard.fyipe.com"
          ports:
            - containerPort: 1445
              hostPort: 1445
              name: api-docs
      restartPolicy: Always
      imagePullSecrets:
        - name: gitlabcredv2
---
# Fyipe API docs Service
apiVersion: v1
kind: Service
metadata:
  labels:
    app: api-docs
  name: api-docs
spec:
  ports:
    - port: 80
      protocol: TCP
      targetPort: 1445
  selector:
    app: api-docs
  type: LoadBalancer
---


###########-----STATUS PAGE------#################

apiVersion: apps/v1
kind: Deployment
metadata:
  name: status-page
  labels:
    app: status-page
spec:
  selector:
    matchLabels:
      app: status-page
  replicas: 3
  template:
    metadata:
      labels:
        app: status-page
    spec:
      containers:
        - image: registry.gitlab.com/fyipe-project/status-page:latest
          name: status-page
          imagePullPolicy: Always
          env:
            - name: IS_SAAS_SERVICE
              value: "true"
            - name: HOST
              value: "https://statuspage.fyipe.com"
            - name: DASHBOARD_HOST
              value: "https://staging-dashboard.fyipe.com"
            - name: BACKEND_HOST
              value: "https://staging-api.fyipe.com"
            - name: ACCOUNTS_HOST
              value: "https://staging-accounts.fyipe.com"
          ports:
            - containerPort: 3006
              hostPort: 3006
              name: status-page
      restartPolicy: Always
      imagePullSecrets:
        - name: gitlabcredv2
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: status-page
  name: status-page
spec:
  ports:
    - port: 80
      protocol: TCP
      targetPort: 3006
  selector:
    app: status-page
  type: LoadBalancer
---
########################################

############-ADMIN-DASHBOARD-#########
apiVersion: apps/v1
kind: Deployment
metadata:
  name: admin-dashboard
  labels:
    app: admin-dashboard
spec:
  selector:
    matchLabels:
      app: admin-dashboard
  replicas: 1
  template:
    metadata:
      labels:
        app: admin-dashboard
    spec:
      containers:
        - image: registry.gitlab.com/fyipe-project/admin-dashboard:latest
          name: admin-dashboard
          imagePullPolicy: Always
          env:
            - name: IS_SAAS_SERVICE
              value: "true"
          ports:
            - containerPort: 3100
              hostPort: 3100
              name: admin-dashboard
      restartPolicy: Always
      imagePullSecrets:
        - name: gitlabcredv2
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: admin-dashboard
  name: admin-dashboard
spec:
  ports:
    - port: 80
      protocol: TCP
      targetPort: 3100
  selector:
    app: admin-dashboard
  type: LoadBalancer
---
##################################

########-PROBE-1-#################
# Probe service and deployement
apiVersion: apps/v1
kind: Deployment
metadata:
  name: probe-1
  labels:
    app: probe-1
spec:
  selector:
    matchLabels:
      app: probe-1
  replicas: 1 # THIS SHOULD STRICTLY BE 1
  template:
    metadata:
      labels:
        app: probe-1
    spec:
      containers:
        - image: registry.gitlab.com/fyipe-project/probe:latest
          name: probe-1
          imagePullPolicy: Always
          env:
            - name: IS_SAAS_SERVICE
              value: "true"
            - name: SERVER_URL
              value: "https://api.fyipe.com"
            - name: PORT
              value: "3008"
            - name: PROBE_NAME
              value: "EU"
            - name: PROBE_KEY
              value: "lfg9859-30as-nm32-q2as-jsdfg89547hjg"
          ports:
            - containerPort: 3008
              hostPort: 3008
              name: probe-1
      restartPolicy: Always
      imagePullSecrets:
        - name: gitlabcredv2
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: probe-1
  name: probe-1
spec:
  ports:
    - port: 80
      protocol: TCP
      targetPort: 3008
  selector:
    app: probe-1
  type: LoadBalancer
---
###########################

########-PROBE-2-##########
# Probe service and deployement
apiVersion: apps/v1
kind: Deployment
metadata:
  name: probe-2
  labels:
    app: probe-2
spec:
  selector:
    matchLabels:
      app: probe-2
  replicas: 1 # THIS SHOULD STRICTLY BE 1
  template:
    metadata:
      labels:
        app: probe-2
    spec:
      containers:
        - image: registry.gitlab.com/fyipe-project/probe:latest
          name: probe-2
          imagePullPolicy: Always
          env:
            - name: IS_SAAS_SERVICE
              value: "true"
            - name: SERVER_URL
              value: "https://api.fyipe.com"
            - name: PORT
              value: "3008"
            - name: PROBE_NAME
              value: "US"
            - name: PROBE_KEY
              value: "qerw234ewr-30as-nm32-q2as-poi90"
          ports:
            - containerPort: 3008
              hostPort: 3008
              name: probe-2
      restartPolicy: Always
      imagePullSecrets:
        - name: gitlabcredv2
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: probe-2
  name: probe-2
spec:
  ports:
    - port: 80
      protocol: TCP
      targetPort: 3008
  selector:
    app: probe-2
  type: LoadBalancer
---
###########################

########-INIT-SCRIPT-##########
apiVersion: apps/v1
kind: Deployment
metadata:
  name: init-script
  labels:
    app: init-script
spec:
  selector:
    matchLabels:
      app: init-script
  replicas: 1 #STRICTLY 1
  template:
    metadata:
      labels:
        app: init-script
    spec:
      containers:
        - image: registry.gitlab.com/fyipe-project/init-script:latest
          name: init-script
          imagePullPolicy: Always
          env:
            - name: MONGO_URL
              value: "mongodb://admin:372b60f4-704c-4205-8e5c-45cdbf44b1fc@mongo-0.mongo-headless.default.svc.cluster.local:27017,mongo-1.mongo-headless.default.svc.cluster.local:27017,mongo-2.mongo-headless.default.svc.cluster.local:27017/fyipedb?replicaSet=fyipe"
      restartPolicy: Never
      imagePullSecrets:
        - name: gitlabcredv2
---

###########################


########-MONGODB-##########
---
apiVersion: v1
kind: Service
metadata:
  name: mongo-headless
  labels:
    name: mongo-headless
spec:
  ports:
    - port: 27017
      targetPort: 27017
  clusterIP: None
  selector:
    role: mongo
---

# stateful set config for mongo
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: mongo
spec:
  serviceName: "mongo-headless"
  replicas: 3
  template:
    metadata:
      labels:
        role: mongo
        environment: production
    spec:
      terminationGracePeriodSeconds: 10
      containers:
        - name: mongo
          image: mongo:4.0
          command: ["/bin/sh", "-c"]
          args:
            [
              "echo 2J2W5Jm7G38y169r8s5T1dW > mongo.key; chmod 600 mongo.key; mongod --replSet fyipe --keyFile mongo.key --smallfiles --noprealloc --bind_ip_all",
            ]
          ports:
            - containerPort: 27017
          volumeMounts:
            - name: persistent-storage
              mountPath: /data/db
  volumeClaimTemplates:
    - metadata:
        name: persistent-storage
        annotations:
          volume.beta.kubernetes.io/storage-class: productiondata
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 900Gi
---
kind: StorageClass
apiVersion: storage.k8s.io/v1beta1
metadata:
  name: productiondata
provisioner: kubernetes.io/gce-pd
parameters:
  type: pd-ssd
reclaimPolicy: Retain
---
###########################


########-REDIS-############
apiVersion: v1
kind: Service
metadata:
  name: redis
spec:
  type: ClusterIP
  ports:
    - port: 6379
      targetPort: 6379
      name: client
    - port: 16379
      targetPort: 16379
      name: gossip
  selector:
    app: redis
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis
data:
  update-node.sh: |
    #!/bin/sh
    REDIS_NODES="/data/nodes.conf"
    sed -i -e "/myself/ s/[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}/${POD_IP}/" ${REDIS_NODES}
    exec "$@"
  redis.conf: |+
    cluster-enabled yes
    cluster-require-full-coverage no
    cluster-node-timeout 15000
    cluster-config-file /data/nodes.conf
    cluster-migration-barrier 1
    appendonly yes
    protected-mode no
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis
spec:
  serviceName: redis
  replicas: 3
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
        - name: redis
          image: redis:5.0.7
          ports:
            - containerPort: 6379
              name: client
            - containerPort: 16379
              name: gossip
          command: ["/conf/update-node.sh", "redis-server", "/conf/redis.conf"]
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          volumeMounts:
            - name: conf
              mountPath: /conf
              readOnly: false
            - name: data
              mountPath: /data
              readOnly: false
      volumes:
        - name: conf
          configMap:
            name: redis
            defaultMode: 0755
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 1Gi
---
###########################


########-MONGO=BACKUP-PRIMARY-############
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongo-backup-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 900Gi
  storageClassName: primarybackup
---
apiVersion: v1
kind: ReplicationController
metadata:
  labels:
    name: mongo-backup-primary
  name: mongo-backup-primary
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: mongo-backup-primary
    spec:
      containers:
        - image: tutum/mongodb-backup
          name: mongodb-backup
          ports:
            - name: mongo
              containerPort: 27017
              hostPort: 27017
          env:
            - name: MAX_BACKUPS
              value: "15"
            - name: MONGODB_USER
              value: "admin"
            - name: MONGODB_PASS
              value: "372b60f4-704c-4205-8e5c-45cdbf44b1fc"
            - name: MONGODB_HOST
              value: "mongo-0.mongo-headless.default.svc.cluster.local"
            - name: MONGODB_PORT
              value: "27017"
          volumeMounts:
            - name: mongo-backup
              mountPath: /backup
      volumes:
        - name: mongo-backup
          persistentVolumeClaim:
            claimName: mongo-backup-pvc
---
kind: StorageClass
apiVersion: storage.k8s.io/v1beta1
metadata:
  name: primarybackup
provisioner: kubernetes.io/gce-pd
parameters:
  type: pd-standard
reclaimPolicy: Retain
---
###########################################


########-MONGO=BACKUP-SECONDARY-############

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongo-secondary-backup-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 900Gi
  storageClassName: secondbackup
---

apiVersion: v1
kind: ReplicationController
metadata:
  labels:
    name: mongo-backup-secondary
  name: mongo-backup-secondary
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: mongo-backup-secondary
    spec:
      containers:
        - image: tutum/mongodb-backup
          name: mongodb-backup
          ports:
            - name: mongo
              containerPort: 27017
              hostPort: 27017
          env:
            - name: MAX_BACKUPS
              value: "15"
            - name: MONGODB_USER
              value: "admin"
            - name: MONGODB_PASS
              value: "372b60f4-704c-4205-8e5c-45cdbf44b1fc"
            - name: MONGODB_HOST
              value: "mongo-0.mongo-headless.default.svc.cluster.local"
            - name: MONGODB_PORT
              value: "27017"
          volumeMounts:
            - name: mongo-backup
              mountPath: /backup
      volumes:
        - name: mongo-backup
          persistentVolumeClaim:
            claimName: mongo-secondary-backup-pvc
---
kind: StorageClass
apiVersion: storage.k8s.io/v1beta1
metadata:
  name: secondbackup
provisioner: kubernetes.io/gce-pd
parameters:
  type: pd-standard
reclaimPolicy: Retain
---

#######################
