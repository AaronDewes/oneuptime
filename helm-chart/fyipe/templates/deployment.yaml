############----INGRESS---#####################################

apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
  name: {{ printf "%s-%s" .Release.Name "ingress"  }}
spec:
  rules:
    - http:
        paths:
          - path: /accounts
            backend:
              serviceName: {{ printf "%s-%s" .Release.Name "accounts"  }}
              servicePort: 80
          - path: /dashboard
            backend:
              serviceName: {{ printf "%s-%s" .Release.Name "dashboard"  }}
              servicePort: 80
          - path: /admin
            backend:
              serviceName: {{ printf "%s-%s" .Release.Name "admin-dash"  }}
              servicePort: 80
          - path: /api
            backend:
              serviceName: {{ printf "%s-%s" .Release.Name "backend"  }}
              servicePort: 80
          - path: /statuspage
            backend:
              serviceName: {{ printf "%s-%s" .Release.Name "status-page"  }}
              servicePort: 80
          {{- if .Values.saas.isSaasService }}
          - path: /slack
            backend:
              serviceName: {{ printf "%s-%s" .Release.Name "slack"  }}
              servicePort: 80
          - path: /
            backend:
              serviceName: {{ printf "%s-%s" .Release.Name "home"  }}
              servicePort: 80
          - path: /docs
            backend:
              serviceName: {{ printf "%s-%s" .Release.Name "api-docs"  }}
              servicePort: 80
          {{- end }}
          
############-----DASHBOARD----#############################
apiVersion: apps/v1
kind: Deployment
metadata:
    name: {{ printf "%s-%s" .Release.Name "dashboard"  }}
    labels:
        app: {{ printf "%s-%s" .Release.Name "dashboard" }}
spec:
    selector:
        matchLabels:
            app: {{ printf "%s-%s" .Release.Name "dashboard"  }}
    replicas: {{ .Values.replicaCount }}
    template:
        metadata:
            labels:
                app: {{ printf "%s-%s" .Release.Name "dashboard"  }}
        spec:
            containers:
                - image: {{ printf "%s/%s/%s:%s" .Values.image.registry .Values.image.repository "dashboard" .Values.image.tag }}
                  name: {{ printf "%s-%s" .Release.Name "dashboard"  }}
                  imagePullPolicy: {{ .Values.image.pullPolicy }}
                  env:
                      - name: HOST
                        value: {{ .Values.host.dashboard }}
                      - name: ACCOUNTS_HOST
                        value: {{ .Values.host.accounts }}
                      - name: BACKEND_HOST
                        value: {{ .Values.host.backend }}
                      - name: DOMAIN
                        value: {{ .Values.domain }}
                      {{- if .Values.saas.isSaasService }}
                      - name: STRIPE_PUBLIC_KEY
                        value: {{ .Values.saas.stripe.publicKey }}
                      - name: IS_SAAS_SERVICE
                        value: 'true'
                      - name: AMPLITUDE_PUBLIC_KEY
                        value: {{ .Values.saas.amplitide.key }}
                      {{- end }}
                  ports:
                      - containerPort: {{ .Values.host.dashboardPort }}
                        hostPort: {{ .Values.host.dashboardPort }}
                        name: {{ printf "%s-%s" .Release.Name "dashboard"  }}
            restartPolicy: {{ .Values.image.restartPolicy }}

---
# Fyipe Dashoard Service
apiVersion: v1
kind: Service
metadata:
    labels:
        app: {{ printf "%s-%s" .Release.Name "dashboard"  }}
    name: {{ printf "%s-%s" .Release.Name "dashboard"  }}
spec:
    ports:
        - port: {{ .Values.host.dashboardServicePort }}
          targetPort: {{ .Values.host.dashboardPort }}
    selector:
        app: {{ printf "%s-%s" .Release.Name "dashboard"  }}
    type: {{ .Values.service.type }}
---
##########################################################

############-----ACCOUNTS----#############################
apiVersion: apps/v1
kind: Deployment
metadata:
    name: {{ printf "%s-%s" .Release.Name "accounts"  }}
    labels:
        app: {{ printf "%s-%s" .Release.Name "accounts"  }}
spec:
    selector:
        matchLabels:
            app: {{ printf "%s-%s" .Release.Name "accounts"  }}
    replicas: {{ .Values.replicaCount }}
    template:
        metadata:
            labels:
                app: {{ printf "%s-%s" .Release.Name "accounts"  }}
        spec:
            containers:
                - image: {{ printf "%s/%s/%s:%s" .Values.image.registry .Values.image.repository "accounts" .Values.image.tag }}
                  name: {{ printf "%s-%s" .Release.Name "accounts"  }}
                  imagePullPolicy: {{ .Values.image.pullPolicy }}
                  env:
                      - name: HOST
                        value: {{ .Values.host.accounts }}
                      - name: DASHBOARD_HOST
                        value: {{ .Values.host.dashboard }}
                      - name: BACKEND_HOST
                        value: {{ .Values.host.backend }}
                      - name: DOMAIN
                        value: {{ .Values.domain }}
                      {{- if .Values.saas.isSaasService }}
                      - name: STRIPE_PUBLIC_KEY
                        value: {{ .Values.saas.stripe.publicKey }}
                      - name: IS_SAAS_SERVICE
                        value: 'true'
                      - name: AMPLITUDE_PUBLIC_KEY
                        value: {{ .Values.saas.amplitide.key }}
                      {{- end }}
                  ports:
                      - containerPort: {{ .Values.host.accountsPort }}
                        hostPort: {{ .Values.host.accountsPort }}
                        name: {{ printf "%s-%s" .Release.Name "accounts"  }}
            restartPolicy: {{ .Values.image.restartPolicy }}

---
# Fyipe Accounts Service
apiVersion: v1
kind: Service
metadata:
    labels:
        app: {{ printf "%s-%s" .Release.Name "accounts"  }}
    name: {{ printf "%s-%s" .Release.Name "accounts"  }}
spec:
    ports:
        - port: {{ .Values.host.accountsServicePort }}
          targetPort: {{ .Values.host.accountsPort }}
    selector:
        app: {{ printf "%s-%s" .Release.Name "accounts"  }}
    type: {{ .Values.service.type }}
---
###########################################

###########-----BACKEND------##############

# Fyipe Backend Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
    name: {{ printf "%s-%s" .Release.Name "backend"  }}
    labels:
        app: {{ printf "%s-%s" .Release.Name "backend"  }}
spec:
    selector:
        matchLabels:
            app: {{ printf "%s-%s" .Release.Name "backend"  }}
    replicas: {{ .Values.replicaCount }}
    template:
        metadata:
            labels:
                app: {{ printf "%s-%s" .Release.Name "backend"  }}
        spec:
            containers:
                - image: {{ printf "%s/%s/%s:%s" .Values.image.registry .Values.image.repository "backend" .Values.image.tag }}
                  name: {{ printf "%s-%s" .Release.Name "backend"  }}
                  imagePullPolicy: {{ .Values.image.pullPolicy }}
                  env:
                      - name: JWT_SECRET
                        value: {{ .Values.encryption.secret }}
                      - name: MONGO_URL
                        value: {{ template "fyipe.mongodbConnectionString" . }}
                      - name: REDIS_HOST
                        value: {{ template "fyipe.redisHost" . }}
                      - name: REDIS_PORT
                        value: {{ .Values.redis.redisPort | quote }}
                      - name: PORT
                        value: {{ .Values.host.backendPort | quote }}
                      - name: EMAIL_ENABLED
                        value: {{ .Values.fyipe.emailEnabled | quote }}
                      - name: CALL_ENABLED
                        value: {{ .Values.fyipe.callEnabled | quote }}
                      - name: SMS_ENABLED
                        value: {{ .Values.fyipe.smsEnabled | quote }}
                      - name: MAIL_USER
                        value: {{ .Values.fyipe.smtpMail.email }}
                      - name: MAIL_PASSWORD
                        value: {{ .Values.fyipe.smtpMail.password }}
                      - name: MAIL_FROM
                        value: {{ .Values.fyipe.smtpMail.fromName }}
                      - name: MAIL_SERVER_SMTP
                        value: {{ .Values.fyipe.smtpMail.smtpServer }}
                      - name: MAIL_PORT_SMTP
                        value: {{ .Values.fyipe.smtpMail.smtpPort }}
                      - name: MAIL_SMTP_SECURE
                        value: {{ .Values.fyipe.smtpMail.smtpSecure }}
                      - name: EMAIL_VERIFY_TIME
                        value: '3600'
                      - name: BACKEND_HOST
                        value: {{ .Values.host.backend }}
                      - name: ACCOUNTS_HOST
                        value: {{ .Values.host.accounts }}
                      - name: HOME_HOST
                        value: 'https://fyipe.com'
                      - name: DASHBOARD_HOST
                        value: {{ .Values.host.dashboard }}
                      - name: NODE_ENV
                        value: 'production'
                      - name: RATE_LIMITTER_TIME_PERIOD_IN_MS
                        value: {{ .Values.rateLimitter.requestLimitTimePeriodInMS | quote }}
                      - name: RATE_LIMITTER_REQUEST_LIMIT
                        value: {{ .Values.rateLimitter.requestLimit | quote }}
                      - name: RATE_LIMITTER_ENABLED
                        value: {{ .Values.rateLimitter.enabled | quote  }}
                      - name: TWILIO_ACCOUNTSID
                        value: {{ .Values.fyipe.twilio.accountSid }}
                      - name: TWILIO_AUTHTOKEN
                        value: {{ .Values.fyipe.twilio.authToken }}
                      - name: TWILIO_NUMBER
                        value: {{ .Values.fyipe.twilio.phoneNumber }}
                      - name: TWILIO_ALERT_LIMIT
                        value: {{ .Values.fyipe.twilio.twilioAlertLimit | quote }}
                      - name: CLUSTER_KEY
                        value: {{ .Values.fyipe.clusterKey }}
                      {{- if .Values.saas.isSaasService }}
                      - name: STRIPE_PUBLIC_KEY
                        value: {{ .Values.saas.stripe.publicKey }}
                      - name: STRIPE_PRIVATE_KEY
                        value: {{ .Values.saas.stripe.privateKey }}
                      - name: IS_SAAS_SERVICE
                        value: 'true'
                      - name: AIRTABLE_API_KEY
                        value: {{ .Values.saas.airtable.key }}
                      - name: AIRTABLE_BASE_ID
                        value: {{ .Values.saas.airtable.baseId }}
                      {{- end }}
                  ports:
                      - containerPort: {{ .Values.host.backendPort }}
                        hostPort: {{ .Values.host.backendPort }}
                        name: {{ printf "%s-%s" .Release.Name "backend"  }}
            restartPolicy: {{ .Values.image.restartPolicy }}

---
# Fyipe Backend Deployment
apiVersion: v1
kind: Service
metadata:
    labels:
        app: {{ printf "%s-%s" .Release.Name "backend"  }}
    name: {{ printf "%s-%s" .Release.Name "backend"  }}
spec:
    ports:
        - port: {{ .Values.host.backendServicePort }}
          targetPort: {{ .Values.host.backendPort }}
    selector:
        app: {{ printf "%s-%s" .Release.Name "backend"  }}
    type: {{ .Values.service.type }}
---
##################################################

###########-----STATUS PAGE------#################
apiVersion: apps/v1
kind: Deployment
metadata:
    name: {{ printf "%s-%s" .Release.Name "status-page"  }}
    labels:
        app: {{ printf "%s-%s" .Release.Name "status-page"  }}
spec:
    selector:
        matchLabels:
            app: {{ printf "%s-%s" .Release.Name "status-page"  }}
    replicas: {{ .Values.replicaCount }}
    template:
        metadata:
            labels:
                app: {{ printf "%s-%s" .Release.Name "status-page"  }}
        spec:
            containers:
                - image: {{ printf "%s/%s/%s:%s" .Values.image.registry .Values.image.repository "status-page" .Values.image.tag }}
                  name: {{ printf "%s-%s" .Release.Name "status-page"  }}
                  imagePullPolicy: {{ .Values.image.pullPolicy }}
                  env:
                    {{- if .Values.saas.isSaasService }}
                    - name: IS_SAAS_SERVICE
                      value: 'true'
                    {{- end }}
                  ports:
                      - containerPort: {{ .Values.host.statusPagePort }}
                        hostPort: {{ .Values.host.statusPagePort }}
                        name: {{ printf "%s-%s" .Release.Name "status-page"  }}
            restartPolicy: {{ .Values.image.restartPolicy }}
---
apiVersion: v1
kind: Service
metadata:
    labels:
        app: {{ printf "%s-%s" .Release.Name "status-page"  }}
    name: {{ printf "%s-%s" .Release.Name "status-page"  }}
spec:
    ports:
        - port: {{ .Values.host.statusPageServicePort }}
          targetPort: {{ .Values.host.statusPagePort }}
    selector:
        app: {{ printf "%s-%s" .Release.Name "status-page"  }}
    type: {{ .Values.service.type }}
---
########################################

############-ADMIN-DASHBOARD-#########
apiVersion: apps/v1
kind: Deployment
metadata:
    name: {{ printf "%s-%s" .Release.Name "admin-dash"  }}
    labels:
        app: {{ printf "%s-%s" .Release.Name "admin-dash"  }}
spec:
    selector:
        matchLabels:
            app: {{ printf "%s-%s" .Release.Name "admin-dash"  }}
    replicas: {{ .Values.replicaCount }}
    template:
        metadata:
            labels:
                app: {{ printf "%s-%s" .Release.Name "admin-dash"  }}
        spec:
            containers:
                - image: {{ printf "%s/%s/%s:%s" .Values.image.registry .Values.image.repository "admin-dashboard" .Values.image.tag }}
                  name: {{ printf "%s-%s" .Release.Name "admin-dash"  }}
                  imagePullPolicy: {{ .Values.image.pullPolicy }}
                  env:
                    {{- if .Values.saas.isSaasService }}
                    - name: IS_SAAS_SERVICE
                      value: 'true'
                    {{- end }}
                  ports:
                      - containerPort: {{ .Values.host.adminDashboardPort }}
                        hostPort: {{ .Values.host.adminDashboardPort }}
                        name: {{ printf "%s-%s" .Release.Name "admin-dash"  }}
            restartPolicy: {{ .Values.image.restartPolicy }}
---
apiVersion: v1
kind: Service
metadata:
    labels:
        app: {{ printf "%s-%s" .Release.Name "admin-dash"  }}
    name: {{ printf "%s-%s" .Release.Name "admin-dash"  }}
spec:
    ports:
        - port: {{ .Values.host.adminDashboardServicePort }}
          targetPort: {{ .Values.host.adminDashboardPort }}
    selector:
        app: {{ printf "%s-%s" .Release.Name "admin-dash"  }}
    type: {{ .Values.service.type }}
---
##################################

########-PROBE-1-#################
#Probe service and deployement
apiVersion: apps/v1
kind: Deployment
metadata:
    name: {{ printf "%s-%s" .Release.Name "probe-1"  }}
    labels:
        app: {{ printf "%s-%s" .Release.Name "probe-1"  }}
spec:
    selector:
        matchLabels:
            app: {{ printf "%s-%s" .Release.Name "probe-1"  }}
    replicas: 1 # THIS SHOULD STRICTLY BE 1
    template:
        metadata:
            labels:
                app: {{ printf "%s-%s" .Release.Name "probe-1"  }}
        spec:
            containers:
                - image: {{ printf "%s/%s/%s:%s" .Values.image.registry .Values.image.repository "probe" .Values.image.tag }}
                  name: {{ printf "%s-%s" .Release.Name "probe-1"  }}
                  imagePullPolicy: {{ .Values.image.pullPolicy }}
                  env:
                      - name: SERVER_URL
                        value: {{ template "fyipe.backendHost" . }}
                      - name: PORT
                        value: {{ .Values.probes.probe1.port | quote }}
                      - name: PROBE_NAME
                        value: {{ .Values.probes.probe1.name }}
                      - name: PROBE_KEY
                        value: {{ .Values.probes.probe1.key }}
                      - name: CLUSTER_KEY
                      value: {{ .Values.fyipe.clusterKey }}
                      {{- if .Values.saas.isSaasService }}
                      - name: IS_SAAS_SERVICE
                        value: 'true'
                      {{- end }}
                  ports:
                      - containerPort: {{ .Values.probes.probe1.port }}
                        hostPort: {{ .Values.probes.probe1.port }}
                        name: {{ printf "%s-%s" .Release.Name "probe-1"  }}
            restartPolicy: {{ .Values.image.restartPolicy }}

---
apiVersion: v1
kind: Service
metadata:
    labels:
        app: {{ printf "%s-%s" .Release.Name "probe-1"  }}
    name: {{ printf "%s-%s" .Release.Name "probe-1"  }}
spec:
    ports:
        - port: {{ .Values.probes.probe1.servicePort }}
          targetPort: {{ .Values.probes.probe1.port }}
    selector:
        app: {{ printf "%s-%s" .Release.Name "probe-1"  }}
    type: {{ .Values.service.type }}
---
###########################

########-PROBE-2-##########
# Probe service and deployement
apiVersion: apps/v1
kind: Deployment
metadata:
    name: {{ printf "%s-%s" .Release.Name "probe-2"  }}
    labels:
        app: {{ printf "%s-%s" .Release.Name "probe-2"  }}
spec:
    selector:
        matchLabels:
            app: {{ printf "%s-%s" .Release.Name "probe-2"  }}
    replicas: 1 # THIS SHOULD STRICTLY BE 1
    template:
        metadata:
            labels:
                app: {{ printf "%s-%s" .Release.Name "probe-2"  }}
        spec:
            containers:
                - image: {{ printf "%s/%s/%s:%s" .Values.image.registry .Values.image.repository "probe" .Values.image.tag }}
                  name: {{ printf "%s-%s" .Release.Name "probe-2"  }}
                  imagePullPolicy: {{ .Values.image.pullPolicy }}
                  env:
                      - name: SERVER_URL
                        value: {{ template "fyipe.backendHost" . }}
                      - name: PORT
                        value: {{ .Values.probes.probe2.port | quote }}
                      - name: CLUSTER_KEY
                        value: {{ .Values.fyipe.clusterKey }}
                      - name: PROBE_NAME
                        value: {{ .Values.probes.probe2.name }}
                      - name: PROBE_KEY
                        value: {{ .Values.probes.probe2.key }}
                      {{- if .Values.saas.isSaasService }}
                      - name: IS_SAAS_SERVICE
                        value: 'true'
                      {{- end }}
                  ports:
                      - containerPort:  {{ .Values.probes.probe2.port }}
                        hostPort:  {{ .Values.probes.probe2.port }}
                        name: {{ printf "%s-%s" .Release.Name "probe-2"  }}
            restartPolicy: {{ .Values.image.restartPolicy }}

---
apiVersion: v1
kind: Service
metadata:
    labels:
        app: {{ printf "%s-%s" .Release.Name "probe-2"  }}
    name: {{ printf "%s-%s" .Release.Name "probe-2"  }}
spec:
    ports:
        - port: {{ .Values.probes.probe2.servicePort }}
          targetPort:  {{ .Values.probes.probe2.port }}
    selector:
        app: {{ printf "%s-%s" .Release.Name "probe-2"  }}
    type: {{ .Values.service.type }}
---
###########################

########-INIT-SCRIPT-##########
#########
#UPDATE: Any update to this file should also be accompanied with ./init-script/production.yaml
#########
apiVersion: batch/v1
kind: Job
metadata:
    name: init-script
spec:
    template:
        spec:
            containers:
                - image: {{ printf "%s/%s/%s:%s" .Values.image.registry .Values.image.repository "init-script" .Values.image.tag }}
                  name: init-script
                  imagePullPolicy: {{ .Values.image.pullPolicy }}
                  env:
                      - name: MONGO_URL
                        value:  {{ template "fyipe.mongodbConnectionString" . }}
            restartPolicy: Never
---
####################################


####################################
#IMPORTANT: Kube Reosurces below are ONLY for SaaS service
####################################

{{- if .Values.saas.isSaasService }}
###########-----SLACK------##############
# Slack
apiVersion: apps/v1
kind: Deployment
metadata:
    name: {{ printf "%s-%s" .Release.Name "slack"  }}
    labels:
        app: {{ printf "%s-%s" .Release.Name "slack"  }}
spec:
    selector:
        matchLabels:
            app: {{ printf "%s-%s" .Release.Name "slack"  }}
    replicas: 1
    template:
        metadata:
            labels:
                app: {{ printf "%s-%s" .Release.Name "slack"  }}
        spec:
            containers:
                - image: {{ printf "%s/%s/%s:%s" .Values.image.registry .Values.image.repository "slack" .Values.image.tag }}
                  name: {{ printf "%s-%s" .Release.Name "slack"  }}
                  imagePullPolicy: {{ .Values.image.pullPolicy }}
                  ports:
                      - containerPort: {{ .Values.host.slackPort }}
                        hostPort: {{ .Values.host.slackPort }}
                        name: {{ printf "%s-%s" .Release.Name "slack"  }}
            restartPolicy: {{ .Values.image.restartPolicy }}

---
apiVersion: v1
kind: Service
metadata:
    labels:
        app: {{ printf "%s-%s" .Release.Name "slack"  }}
    name: {{ printf "%s-%s" .Release.Name "slack"  }}
spec:
    ports:
        - port: {{ .Values.host.slackServicePort }}
          protocol: TCP
          targetPort: {{ .Values.host.slackPort }}
    selector:
        app: {{ printf "%s-%s" .Release.Name "slack"  }}
    type: {{ .Values.service.type }}
---

###########-----HOME------#################
# Fyipe Home
apiVersion: apps/v1
kind: Deployment
metadata:
    name: {{ printf "%s-%s" .Release.Name "home"  }}
    labels:
        app: {{ printf "%s-%s" .Release.Name "home"  }}
spec:
    selector:
        matchLabels:
            app: {{ printf "%s-%s" .Release.Name "home"  }}
    replicas: {{ .Values.replicaCount }}
    template:
        metadata:
            labels:
                app: {{ printf "%s-%s" .Release.Name "home"  }}
        spec:
            containers:
                - image: {{ printf "%s/%s/%s:%s" .Values.image.registry .Values.image.repository "home" .Values.image.tag }}
                  name: {{ printf "%s-%s" .Release.Name "home"  }}
                  imagePullPolicy: {{ .Values.image.pullPolicy }}
                  env:
                      - name: IS_SAAS_SERVICE
                        value: 'true'
                  ports:
                      - containerPort: {{ .Values.host.homePort }}
                        hostPort: {{ .Values.host.homePort }}
                        name: {{ printf "%s-%s" .Release.Name "home"  }}
            restartPolicy: {{ .Values.image.restartPolicy }}

---
apiVersion: v1
kind: Service
metadata:
    labels:
        app: {{ printf "%s-%s" .Release.Name "home"  }}
    name: {{ printf "%s-%s" .Release.Name "home"  }}
spec:
    ports:
        - port: {{ .Values.host.homeServicePort }}
          protocol: TCP
          targetPort: {{ .Values.host.homePort }}
    selector:
        app: {{ printf "%s-%s" .Release.Name "home"  }}
    type: {{ .Values.service.type }}
---
###########################################

###########-----API-DOCS------##############

# Fyipe API docs Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
    name: {{ printf "%s-%s" .Release.Name "api-docs"  }}
    labels:
        app: {{ printf "%s-%s" .Release.Name "api-docs"  }}
spec:
    selector:
        matchLabels:
            app: {{ printf "%s-%s" .Release.Name "api-docs"  }}
    replicas: {{ .Values.replicaCount }}
    template:
        metadata:
            labels:
                app: {{ printf "%s-%s" .Release.Name "api-docs"  }}
        spec:
            containers:
                - image: {{ printf "%s/%s/%s:%s" .Values.image.registry .Values.image.repository "api-docs" .Values.image.tag }}
                  name: {{ printf "%s-%s" .Release.Name "api-docs"  }}
                  imagePullPolicy: {{ .Values.image.pullPolicy }}
                  env:
                      - name: IS_SAAS_SERVICE
                        value: 'true'
                  ports:
                      - containerPort: {{ .Values.host.apiDocsPort }}
                        hostPort: {{ .Values.host.apiDocsPort }}
                        name: {{ printf "%s-%s" .Release.Name "api-docs"  }}
            restartPolicy: {{ .Values.image.restartPolicy }}

---
# Fyipe API docs Service
apiVersion: v1
kind: Service
metadata:
    labels:
        app: {{ printf "%s-%s" .Release.Name "api-docs"  }}
    name: {{ printf "%s-%s" .Release.Name "api-docs"  }}
spec:
    ports:
        - port: {{ .Values.host.apiDocsServicePort }}
          protocol: TCP
          targetPort: {{ .Values.host.apiDocsPort }}
    selector:
        app: {{ printf "%s-%s" .Release.Name "api-docs"  }}
    type: {{ .Values.service.type }}
---
###########################################
{{- end }}