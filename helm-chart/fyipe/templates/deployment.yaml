############----INGRESS-TLS-SECRET----#########################
# apiVersion: v1
# kind: Secret
# metadata:
#   name: fyipe-secret
# type: Opaque
# data:
#   tls.crt: {{ .Values.tls.crt }}
#   tls.key: {{ .Values.tls.key }}

############----INGRESS---#####################################

apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: {{ printf "%s-%s" .Release.Name "ingress" }}
spec:
  tls:
  - hosts:
    - {{ .Values.domain }}
    secretName: fyipe-secret
  rules:
  - host: {{ printf "%s.%s" "accounts" .Values.domain }}
    http:
      paths:
      - path: /
        backend:
          serviceName: {{ printf "%s-%s" .Release.Name "accounts"  }}
          servicePort: 80
  - host: {{ printf "%s.%s" "api" .Values.domain }}
    http:
      paths:
      - path: /
        backend:
          serviceName: {{ printf "%s-%s" .Release.Name "backend"  }}
          servicePort: 80
  - host: {{ printf "%s.%s" "dashboard" .Values.domain }}
    http:
      paths:
      - path: /
        backend:
          serviceName: {{ printf "%s-%s" .Release.Name "dashboard"  }}
          servicePort: 80
  - host: {{ printf "%s.%s" "admin-dashboard" .Values.domain }}
    http:
      paths:
      - path: /
        backend:
          serviceName: {{ printf "%s-%s" .Release.Name "admin-dash"  }}
          servicePort: 80
  - host: {{ printf "%s.%s" "status-page" .Values.domain }}
    http:
      paths:
      - path: /
        backend:
          serviceName: {{ printf "%s-%s" .Release.Name "status-page"  }}
          servicePort: 80
      

############-----DASHBOARD----#############################

apiVersion: apps/v1
kind: Deployment
metadata:
    name: {{ printf "%s-%s" .Release.Name "dashboard"  }}
    labels:
        app: {{ printf "%s-%s" .Release.Name "dashboard" }}
spec:
    selector:
        matchLabels:
            app: {{ printf "%s-%s" .Release.Name "dashboard"  }}
    replicas: {{ .Values.replicaCount }}
    template:
        metadata:
            labels:
                app: {{ printf "%s-%s" .Release.Name "dashboard"  }}
        spec:
            containers:
                - image: {{ printf "%s/%s/%s:%s" .Values.image.registry .Values.image.repository "dashboard" .Values.image.tag }}
                  name: {{ printf "%s-%s" .Release.Name "dashboard"  }}
                  imagePullPolicy: {{ .Values.image.pullPolicy }}
                  env:
                      - name: HOST
                        value: {{ .Values.host.dashboard }}
                      - name: ACCOUNTS_HOST
                        value: {{ .Values.host.accounts }}
                      - name: BACKEND_HOST
                        value: {{ .Values.host.backend }}
                      - name: DOMAIN
                        value: {{ .Values.domain }}
                  ports:
                      - containerPort: {{ .Values.host.dashboardPort }}
                        hostPort: {{ .Values.host.dashboardPort }}
                        name: {{ printf "%s-%s" .Release.Name "dashboard"  }}
            restartPolicy: {{ .Values.image.restartPolicy }}

---
# Fyipe Dashoard Service
apiVersion: v1
kind: Service
metadata:
    labels:
        app: {{ printf "%s-%s" .Release.Name "dashboard"  }}
    name: {{ printf "%s-%s" .Release.Name "dashboard"  }}
spec:
    ports:
        - port: {{ .Values.host.dashboardServicePort }}
          protocol: TCP
          targetPort: {{ .Values.host.dashboardPort }}
    selector:
        app: {{ printf "%s-%s" .Release.Name "dashboard"  }}
    type: {{ .Values.service.type }}
---
##########################################################

############-----ACCOUNTS----#############################
apiVersion: apps/v1
kind: Deployment
metadata:
    name: {{ printf "%s-%s" .Release.Name "accounts"  }}
    labels:
        app: {{ printf "%s-%s" .Release.Name "accounts"  }}
spec:
    selector:
        matchLabels:
            app: {{ printf "%s-%s" .Release.Name "accounts"  }}
    replicas: {{ .Values.replicaCount }}
    template:
        metadata:
            labels:
                app: {{ printf "%s-%s" .Release.Name "accounts"  }}
        spec:
            containers:
                - image: {{ printf "%s/%s/%s:%s" .Values.image.registry .Values.image.repository "accounts" .Values.image.tag }}
                  name: {{ printf "%s-%s" .Release.Name "accounts"  }}
                  imagePullPolicy: {{ .Values.image.pullPolicy }}
                  env:
                      - name: HOST
                        value: {{ .Values.host.accounts }}
                      - name: DASHBOARD_HOST
                        value: {{ .Values.host.dashboard }}
                      - name: BACKEND_HOST
                        value: {{ .Values.host.backend }}
                      - name: DOMAIN
                        value: {{ .Values.domain }}
                  ports:
                      - containerPort: {{ .Values.host.accountsPort }}
                        hostPort: {{ .Values.host.accountsPort }}
                        name: {{ printf "%s-%s" .Release.Name "accounts"  }}
            restartPolicy: {{ .Values.image.restartPolicy }}

---
# Fyipe Accounts Service
apiVersion: v1
kind: Service
metadata:
    labels:
        app: {{ printf "%s-%s" .Release.Name "accounts"  }}
    name: {{ printf "%s-%s" .Release.Name "accounts"  }}
spec:
    ports:
        - port: {{ .Values.host.accountsServicePort }}
          protocol: TCP
          targetPort: {{ .Values.host.accountsPort }}
    selector:
        app: {{ printf "%s-%s" .Release.Name "accounts"  }}
    type: {{ .Values.service.type }}
---
###########################################

###########-----BACKEND------##############

# Fyipe Backend Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
    name: {{ printf "%s-%s" .Release.Name "backend"  }}
    labels:
        app: {{ printf "%s-%s" .Release.Name "backend"  }}
spec:
    selector:
        matchLabels:
            app: {{ printf "%s-%s" .Release.Name "backend"  }}
    replicas: {{ .Values.replicaCount }}
    template:
        metadata:
            labels:
                app: {{ printf "%s-%s" .Release.Name "backend"  }}
        spec:
            containers:
                - image: {{ printf "%s/%s/%s:%s" .Values.image.registry .Values.image.repository "backend" .Values.image.tag }}
                  name: {{ printf "%s-%s" .Release.Name "backend"  }}
                  imagePullPolicy: {{ .Values.image.pullPolicy }}
                  env:
                      - name: JWT_SECRET
                        value: {{ .Values.encryption.secret }}
                      - name: MONGO_URL
                        value: {{ template "fyipe.mongodbConnectionString" . }}
                      - name: REDIS_HOST
                        value: {{ template "fyipe.redisHost" . }}
                      - name: REDIS_PORT
                        value: {{ .Values.redis.redisPort | quote }}
                      - name: PORT
                        value: {{ .Values.host.backendPort | quote }}
                      - name: EMAIL_ENABLED
                        value: {{ .Values.fyipe.emailEnabled | quote }}
                      - name: CALL_ENABLED
                        value: {{ .Values.fyipe.callEnabled | quote }}
                      - name: SMS_ENABLED
                        value: {{ .Values.fyipe.smsEnabled | quote }}
                      - name: MAIL_USER
                        value: {{ .Values.smtpMail.email }}
                      - name: MAIL_PASSWORD
                        value: {{ .Values.smtpMail.password }}
                      - name: MAIL_FROM
                        value: {{ .Values.smtpMail.fromName }}
                      - name: MAIL_SERVER_SMTP
                        value: {{ .Values.smtpMail.smtpServer }}
                      - name: MAIL_PORT_SMTP
                        value: {{ .Values.smtpMail.smtpPort }}
                      - name: MAIL_SMTP_SECURE
                        value: {{ .Values.smtpMail.smtpSecure }}
                      - name: EMAIL_VERIFY_TIME
                        value: '3600'
                      - name: BACKEND_HOST
                        value: {{ .Values.host.backend }}
                      - name: ACCOUNTS_HOST
                        value: {{ .Values.host.accounts }}
                      - name: HOME_HOST
                        value: 'https://fyipe.com'
                      - name: DASHBOARD_HOST
                        value: {{ .Values.host.dashboard }}
                      - name: NODE_ENV
                        value: 'production'
                      - name: RATE_LIMITTER_TIME_PERIOD_IN_MS
                        value: {{ .Values.rateLimitter.requestLimitTimePeriodInMS | quote }}
                      - name: RATE_LIMITTER_REQUEST_LIMIT
                        value: {{ .Values.rateLimitter.requestLimit | quote }}
                      - name: RATE_LIMITTER_ENABLED
                        value: {{ .Values.rateLimitter.enabled | quote  }}
                      - name: TWILIO_ACCOUNTSID
                        value: {{ .Values.twilio.accountSid }}
                      - name: TWILIO_AUTHTOKEN
                        value: {{ .Values.twilio.authToken }}
                      - name: TWILIO_NUMBER
                        value: {{ .Values.twilio.phoneNumber }}
                      - name: TWILIO_ALERT_LIMIT
                        value: {{ .Values.twilio.twilioAlertLimit | quote }}
                  ports:
                      - containerPort: {{ .Values.host.backendPort }}
                        hostPort: {{ .Values.host.backendPort }}
                        name: {{ printf "%s-%s" .Release.Name "backend"  }}
            restartPolicy: {{ .Values.image.restartPolicy }}

---
# Fyipe Backend Deployment
apiVersion: v1
kind: Service
metadata:
    labels:
        app: {{ printf "%s-%s" .Release.Name "backend"  }}
    name: {{ printf "%s-%s" .Release.Name "backend"  }}
spec:
    ports:
        - port: {{ .Values.host.backendServicePort }}
          protocol: TCP
          targetPort: {{ .Values.host.backendPort }}
    selector:
        app: {{ printf "%s-%s" .Release.Name "backend"  }}
    type: {{ .Values.service.type }}
---
##################################################

###########-----STATUS PAGE------#################
apiVersion: apps/v1
kind: Deployment
metadata:
    name: {{ printf "%s-%s" .Release.Name "status-page"  }}
    labels:
        app: {{ printf "%s-%s" .Release.Name "status-page"  }}
spec:
    selector:
        matchLabels:
            app: {{ printf "%s-%s" .Release.Name "status-page"  }}
    replicas: {{ .Values.replicaCount }}
    template:
        metadata:
            labels:
                app: {{ printf "%s-%s" .Release.Name "status-page"  }}
        spec:
            containers:
                - image: {{ printf "%s/%s/%s:%s" .Values.image.registry .Values.image.repository "status-page" .Values.image.tag }}
                  name: {{ printf "%s-%s" .Release.Name "status-page"  }}
                  imagePullPolicy: {{ .Values.image.pullPolicy }}
                  env:
                      - name: HOST
                        value: {{ .Values.host.statusPage }}
                      - name: DASHBOARD_HOST
                        value: {{ .Values.host.dashboard }}
                      - name: BACKEND_HOST
                        value: {{ .Values.host.backend }}
                      - name: ACCOUNTS_HOST
                        value: {{ .Values.host.accounts }}
                  ports:
                      - containerPort: {{ .Values.host.statusPagePort }}
                        hostPort: {{ .Values.host.statusPagePort }}
                        name: {{ printf "%s-%s" .Release.Name "status-page"  }}
            restartPolicy: {{ .Values.image.restartPolicy }}
---
apiVersion: v1
kind: Service
metadata:
    labels:
        app: {{ printf "%s-%s" .Release.Name "status-page"  }}
    name: {{ printf "%s-%s" .Release.Name "status-page"  }}
spec:
    ports:
        - port: {{ .Values.host.statusPageServicePort }}
          protocol: TCP
          targetPort: {{ .Values.host.statusPagePort }}
    selector:
        app: {{ printf "%s-%s" .Release.Name "status-page"  }}
    type: {{ .Values.service.type }}
---
########################################

############-ADMIN-DASHBOARD-#########
apiVersion: apps/v1
kind: Deployment
metadata:
    name: {{ printf "%s-%s" .Release.Name "admin-dash"  }}
    labels:
        app: {{ printf "%s-%s" .Release.Name "admin-dash"  }}
spec:
    selector:
        matchLabels:
            app: {{ printf "%s-%s" .Release.Name "admin-dash"  }}
    replicas: {{ .Values.replicaCount }}
    template:
        metadata:
            labels:
                app: {{ printf "%s-%s" .Release.Name "admin-dash"  }}
        spec:
            containers:
                - image: fyipeproject/admin-dashboard:latest
                  name: {{ printf "%s-%s" .Release.Name "admin-dash"  }}
                  imagePullPolicy: {{ .Values.image.pullPolicy }}
                  env:
                  ports:
                      - containerPort: {{ .Values.host.adminDashboardPort }}
                        hostPort: {{ .Values.host.adminDashboardPort }}
                        name: {{ printf "%s-%s" .Release.Name "admin-dash"  }}
            restartPolicy: {{ .Values.image.restartPolicy }}
---
apiVersion: v1
kind: Service
metadata:
    labels:
        app: {{ printf "%s-%s" .Release.Name "admin-dash"  }}
    name: {{ printf "%s-%s" .Release.Name "admin-dash"  }}
spec:
    ports:
        - port: {{ .Values.host.adminDashboardServicePort }}
          protocol: TCP
          targetPort: {{ .Values.host.adminDashboardPort }}
    selector:
        app: {{ printf "%s-%s" .Release.Name "admin-dash"  }}
    type: {{ .Values.service.type }}
---
##################################

########-PROBE-1-#################
#Probe service and deployement
apiVersion: apps/v1
kind: Deployment
metadata:
    name: {{ printf "%s-%s" .Release.Name "probe-1"  }}
    labels:
        app: {{ printf "%s-%s" .Release.Name "probe-1"  }}
spec:
    selector:
        matchLabels:
            app: {{ printf "%s-%s" .Release.Name "probe-1"  }}
    replicas: 1 # THIS SHOULD STRICTLY BE 1
    template:
        metadata:
            labels:
                app: {{ printf "%s-%s" .Release.Name "probe-1"  }}
        spec:
            containers:
                - image: fyipeproject/probe:latest
                  name: {{ printf "%s-%s" .Release.Name "probe-1"  }}
                  imagePullPolicy: {{ .Values.image.pullPolicy }}
                  env:
                      - name: SERVER_URL
                        value: {{ .Values.host.backend }}
                      - name: PORT
                        value: {{ .Values.probes.probe1.port | quote }}
                      - name: PROBE_NAME
                        value: {{ .Values.probes.probe1.name }}
                      - name: PROBE_KEY
                        value: {{ .Values.probes.probe1.key }}
                  ports:
                      - containerPort: {{ .Values.probes.probe1.port }}
                        hostPort: {{ .Values.probes.probe1.port }}
                        name: {{ printf "%s-%s" .Release.Name "probe-1"  }}
            restartPolicy: {{ .Values.image.restartPolicy }}

---
apiVersion: v1
kind: Service
metadata:
    labels:
        app: {{ printf "%s-%s" .Release.Name "probe-1"  }}
    name: {{ printf "%s-%s" .Release.Name "probe-1"  }}
spec:
    ports:
        - port: {{ .Values.probes.probe1.servicePort }}
          protocol: TCP
          targetPort: {{ .Values.probes.probe1.port }}
    selector:
        app: {{ printf "%s-%s" .Release.Name "probe-1"  }}
    type: {{ .Values.service.type }}
---
###########################

########-PROBE-2-##########
# Probe service and deployement
apiVersion: apps/v1
kind: Deployment
metadata:
    name: {{ printf "%s-%s" .Release.Name "probe-2"  }}
    labels:
        app: {{ printf "%s-%s" .Release.Name "probe-2"  }}
spec:
    selector:
        matchLabels:
            app: {{ printf "%s-%s" .Release.Name "probe-2"  }}
    replicas: 1 # THIS SHOULD STRICTLY BE 1
    template:
        metadata:
            labels:
                app: {{ printf "%s-%s" .Release.Name "probe-2"  }}
        spec:
            containers:
                - image: fyipeproject/probe:latest
                  name: {{ printf "%s-%s" .Release.Name "probe-2"  }}
                  imagePullPolicy: {{ .Values.image.pullPolicy }}
                  env:
                      - name: SERVER_URL
                        value: {{ .Values.host.backend }}
                      - name: PORT
                        value: {{ .Values.probes.probe2.port | quote }}
                      - name: PROBE_NAME
                        value: {{ .Values.probes.probe2.name }}
                      - name: PROBE_KEY
                        value: {{ .Values.probes.probe2.key }}
                  ports:
                      - containerPort:  {{ .Values.probes.probe2.port }}
                        hostPort:  {{ .Values.probes.probe2.port }}
                        name: {{ printf "%s-%s" .Release.Name "probe-2"  }}
            restartPolicy: {{ .Values.image.restartPolicy }}

---
apiVersion: v1
kind: Service
metadata:
    labels:
        app: {{ printf "%s-%s" .Release.Name "probe-2"  }}
    name: {{ printf "%s-%s" .Release.Name "probe-2"  }}
spec:
    ports:
        - port: {{ .Values.probes.probe2.servicePort }}
          protocol: TCP
          targetPort:  {{ .Values.probes.probe2.port }}
    selector:
        app: {{ printf "%s-%s" .Release.Name "probe-2"  }}
    type: {{ .Values.service.type }}
---
###########################

########-INIT-SCRIPT-##########
#########
#UPDATE: Any update to this file should also be accompanied with ./init-script/production.yaml
#########
apiVersion: batch/v1
kind: Job
metadata:
    name: init-script
spec:
    template:
        spec:
            containers:
                - image: fyipeproject/init-script:latest
                  name: init-script
                  imagePullPolicy: {{ .Values.image.pullPolicy }}
                  env:
                      - name: MONGO_URL
                        value:  {{ template "fyipe.mongodbConnectionString" . }}
            restartPolicy: Never
---
####################################

