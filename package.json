{
    "name": "app",
    "version": "3.0.2",
    "description": "One Complete SRE and DevOps platform.",
    "main": "ts",
    "type": "module",
    "dependencies": {
        "@types/lodash": "^4.14.182",
        "eslint-plugin-progress": "^0.0.1",
        "the-new-css-reset": "^1.7.3"
    },
    "devDependencies": {
        "@babel/core": "^7.17.8",
        "@babel/plugin-proposal-class-properties": "^7.16.7",
        "@babel/plugin-proposal-private-methods": "^7.16.11",
        "@typescript-eslint/eslint-plugin": "^5.16.0",
        "@typescript-eslint/parser": "^5.16.0",
        "babel-eslint": "^10.1.0",
        "ejs-lint": "^1.2.1",
        "eslint": "^8.22.0",
        "eslint-config-airbnb": "^19.0.4",
        "eslint-config-prettier": "^8.5.0",
        "eslint-plugin-import": "^2.25.4",
        "eslint-plugin-jsx-a11y": "^6.5.1",
        "eslint-plugin-prettier": "^4.0.0",
        "eslint-plugin-react": "^7.29.4",
        "eslint-plugin-react-hooks": "^4.3.0",
        "eslint-plugin-unused-imports": "^2.0.0",
        "husky": "^7.0.0",
        "lint-staged": "^12.3.7",
        "prettier": "^2.6.0"
    },
    "scripts": {
        "prerun": "touch ./Common/secret.env && touch ./CommonServer/secret.env",
        "typeorm": "node --require ts-node/register ./node_modules/typeorm/cli.js",
        "count-total-lines-of-code": "git grep ^ | wc -l",
        "uninstall": "docker stop $(docker ps -a -q) && docker rm $(docker ps -a -q)",
        "delete-all-local-branches": "git branch | grep -v 'master' | xargs git branch -D",
        "lint": "ejslint home/views/*.ejs && eslint '**/*.ts*' -c .eslintrc.json --ignore-path .eslintignore ",
        "fix-lint": " node --max_old_space_size=18192 ./node_modules/.bin/eslint '**/*.ts*' -c .eslintrc.json --ignore-path .eslintignore --fix ",
        "fix": "npm run fix-lint",
        "build": "npm run prerun && docker-compose --env-file ./docker-enterprise.env build",
        "build-ci": "npm run prerun && docker-compose  --env-file ./docker-enterprise.env -f docker-compose.ci.yml build $npm_config_services",
        "build-dev": "npm run prerun && docker-compose  --env-file ./docker-enterprise.env -f docker-compose.dev.yml build $npm_config_services",
        "ps-dev": "npm run prerun && docker-compose -f docker-compose.dev.yml ps",
        "logs-dev": "npm run prerun && docker-compose -f docker-compose.dev.yml logs --tail=100 -f $npm_config_services",
        "force-build-dev": "docker-compose  --env-file ./docker-enterprise.env -f docker-compose.dev.yml build --no-cache $npm_config_services",
        "kill-dev": "docker-compose  --env-file ./docker-enterprise.env -f docker-compose.dev.yml down",
        "prod": "npm run prerun && docker-compose up -d",
        "dev": "npm run prerun && npm run start-enterprise-dev $npm_config_services",
        "saas-dev": "npm run prerun && export IS_SAAS_SERVICE=true && npm run dev $npm_config_services",
        "start-enterprise-dev": "npm run prerun && export DOCKER_CLIENT_TIMEOUT=1000 && export COMPOSE_HTTP_TIMEOUT=1000 && docker-compose -f docker-compose.dev.yml up -d $npm_config_services",
        "start-enterprise-ci": "npm run prerun && export DOCKER_CLIENT_TIMEOUT=1000 && export COMPOSE_HTTP_TIMEOUT=1000 && docker-compose -f docker-compose.ci.yml up -d $npm_config_services",
        "stop-dev": "docker-compose -f docker-compose.dev.yml down --remove-orphans",
        "staging-test": "cd tests && npm run-script staging-test",
        "prune": "docker system prune",
        "remove-all-containers": "docker stop $(docker ps -a -q) && docker rm $(docker ps -a -q) || echo 'No running containers'",
        "debug-staging-test": "cd tests && npm run-script debug-staging-test",
        "docker-enterprise-test": "npm install && npm run remove-all-containers && docker-compose build && docker-compose --env-file=./docker-compose-enterprise-ci.env up -d && cd tests && npm run-script enterprise-test",
        "docker-saas-test": "npm run prerun && npm install && npm run remove-all-containers && docker-compose build && docker-compose --env-file=./docker-compose-saas-ci.env up -d && cd tests && npm run-script saas-test",
        "ci-docker-enterprise": "npm run prerun && export NODE_ENV=ci && npm run remove-all-containers && docker-compose build && docker-compose --env-file=./docker-compose-enterprise-ci.env up -d",
        "ci-docker-saas": "npm run prerun && export NODE_ENV=ci && npm run remove-all-containers && docker-compose build && docker-compose --env-file=./docker-compose-saas-ci.env up -d",
        "ci-docker-saas-InitScript": "npm run prerun && export NODE_ENV=ci && npm run remove-all-containers && docker-compose build InitScript && docker compose --env-file=./docker-compose-saas-ci.env up -d InitScript",
        "ci-docker-enterprise-InitScript": "npm run prerun && export NODE_ENV=ci && npm run remove-all-containers && docker-compose build InitScript && docker compose --env-file=./docker-compose-enterprise-ci.env up -d InitScript",
        "prepare": "husky install"
    },
    "repository": {
        "type": "git",
        "url": "git+https://gitlab.com/oneuptime/app.git"
    },
    "keywords": [],
    "author": "",
    "license": "MIT",
    "bugs": {
        "url": "https://gitlab.com/oneuptime/app/issues"
    },
    "homepage": "https://gitlab.com/oneuptime/app#readme"
}
