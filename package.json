{
    "name": "app",
    "version": "3.0.2",
    "description": "One Complete SRE and DevOps platform.",
    "main": "index.js",
    "dependencies": {
        "@fortawesome/fontawesome-svg-core": "^1.2.36",
        "@fortawesome/free-solid-svg-icons": "^5.15.4",
        "@fortawesome/react-fontawesome": "^0.1.16",
        "prismjs": "^1.20.0",
        "react-markdown": "^4.3.1",
        "react-simple-code-editor": "^0.11.0"
    },
    "devDependencies": {
        "ejs-lint": "^1.2.1",
        "@babel/core": "^7.10.2",
        "@babel/plugin-proposal-class-properties": "^7.10.1",
        "@babel/plugin-proposal-private-methods": "^7.10.1",
        "babel-eslint": "^10.1.0",
        "eslint": "^6.8.0",
        "eslint-config-airbnb": "^18.2.1",
        "eslint-config-prettier": "^6.10.0",
        "eslint-plugin-import": "^2.22.1",
        "eslint-plugin-jsx-a11y": "^6.4.1",
        "eslint-plugin-prettier": "^3.1.2",
        "eslint-plugin-react": "^7.21.5",
        "eslint-plugin-react-hooks": "^4.2.0",
        "husky": "^4.3.5",
        "lint-staged": "^9.5.0",
        "prettier": "^1.19.1"
    },
    "scripts": {
        "uninstall": "docker stop $(docker ps -a -q) && docker rm $(docker ps -a -q)",
        "delete-all-local-branches": "git branch | grep -v 'master' | xargs git branch -D",
        "lint": "ejslint home/views/*.ejs && eslint '**/*.js' -c .eslintrc.json --ignore-path .eslintignore",
        "fix-lint": "eslint '**/*.js' -c .eslintrc.json --ignore-path .eslintignore --fix",
        "fix": "npm run fix-lint",
        "build": "docker-compose build",
        "build-dev": "docker-compose -f docker-compose.dev.yml build $npm_config_services",
        "prod": "docker-compose up -d",
        "dev": "npm run build-dev $npm_config_services && npm run start-enterprise-dev $npm_config_services",
        "saas-dev": "export IS_SAAS_SERVICE=true && npm run dev $npm_config_services",
        "start-enterprise-dev": "export DOCKER_CLIENT_TIMEOUT=1000 && export COMPOSE_HTTP_TIMEOUT=1000 && docker-compose -f docker-compose.dev.yml up -d $npm_config_services",
        "stop-dev": "docker-compose -f docker-compose.dev.yml down --remove-orphans",
        "staging-test": "cd tests && npm run-script staging-test",
        "remove-all-containers": "docker stop $(docker ps -a -q) && docker rm $(docker ps -a -q) || echo 'No running containers'",
        "debug-staging-test": "cd tests && npm run-script debug-staging-test",
        "docker-enterprise-test": "npm run remove-all-containers && docker-compose build && docker-compose --env-file=./docker-compose-enterprise-ci.env up && cd tests && npm run-script enterprise-test",
        "docker-saas-test": "npm run remove-all-containers && docker-compose build && docker-compose --env-file=./docker-compose-saas-ci.env up && cd tests && npm run-script saas-test",
        "ci-docker-enterprise": "export NODE_ENV=ci && npm run remove-all-containers && docker-compose build && docker-compose --env-file=./docker-compose-enterprise-ci.env up -d",
        "ci-docker-saas": "export NODE_ENV=ci && npm run remove-all-containers && docker-compose build && docker-compose --env-file=./docker-compose-saas-ci.env up -d",
        "ci-docker-saas-init-script": "export NODE_ENV=ci && npm run remove-all-containers && docker-compose build init-script && docker compose --env-file=./docker-compose-saas-ci.env up -d init-script",
        "ci-docker-enterprise-init-script": "export NODE_ENV=ci && npm run remove-all-containers && docker-compose build init-script && docker compose --env-file=./docker-compose-enterprise-ci.env up -d init-script"
    },
    "repository": {
        "type": "git",
        "url": "git+https://gitlab.com/oneuptime/app.git"
    },
    "keywords": [],
    "author": "",
    "license": "ISC",
    "bugs": {
        "url": "https://gitlab.com/oneuptime/app/issues"
    },
    "homepage": "https://gitlab.com/oneuptime/app#readme",
    "husky": {
        "hooks": {
            "pre-commit": "lint-staged"
        }
    },
    "lint-staged": {
        "./**/*.{json,yml,yaml,md}": [
            "prettier --write --config .prettierrc.json",
            "git add"
        ],
        "./**/*.{js}": [
            "eslint -c .eslintrc.json --ignore-path .eslintignore --fix",
            "git add"
        ]
    }
}
