build_n_test_backend:
    stage: BuildAndTest
    script:
        - chmod +x ./ci/scripts/checkhash.sh
        - export next_stage=`./ci/scripts/checkhash.sh build_n_test_backend backend init-script probe http-test-server`
        - if [[ $next_stage == *"skip"* ]]; then exit ${CI_JOB_SKIP_EXIT_CODE:-0}; fi
        - curl -sSL https://get.docker.com/ | sh #Install docker.
        - sudo docker stop $(sudo docker ps -aq) || echo 'No docker containers'
        - sudo docker rm $(sudo docker ps -aq) || echo 'No docker containers'
        - sudo docker run --name mongo -p 27017:27017 -d mongo:4.2.3
        - sudo docker run --name redis -p 6379:6379 -d redis:5.0.7 redis-server
        - sudo docker run --name=samlIdp -p 9876:8080 -p 8443:8443 -e SIMPLESAMLPHP_SP_ENTITY_ID=hackerbay.io -e SIMPLESAMLPHP_SP_ASSERTION_CONSUMER_SERVICE=http://localhost:3002/api/user/sso/callback -e SIMPLESAMLPHP_SP_SINGLE_LOGOUT_SERVICE=http://localhost/simplesaml/module.php/saml/sp/saml2-logout.php/test-sp -v $PWD/saml/users.php:/var/www/simplesamlphp/config/authsources.php -d kristophjunge/test-saml-idp
        - sudo docker build -t fyipeproject/init-script:3.0.$CI_PIPELINE_IID ./init-script
        - sudo docker run -e NODE_ENV=development -e IS_SAAS_SERVICE=true -e IS_TESTING=true --net=host -d fyipeproject/init-script:3.0.$CI_PIPELINE_IID
        - sudo docker build -t fyipeproject/backend:3.0.$CI_PIPELINE_IID ./backend
        - sudo docker build -t fyipeproject/probe:3.0.$CI_PIPELINE_IID ./probe
        - sudo docker run --name probe-1 --env-file ./probe/.env -e PORT=3024 -e SERVER_URL=http://localhost:3020 -e PROBE_NAME='Probe 1' -e PROBE_KEY=test-key --net=host -d fyipeproject/probe:3.0.$CI_PIPELINE_IID
        - sudo docker run --name probe-2 --env-file ./probe/.env -e PORT=3025 -e SERVER_URL=http://localhost:3020 -e PROBE_NAME='Probe 2' -e PROBE_KEY=test-key --net=host -d fyipeproject/probe:3.0.$CI_PIPELINE_IID
        - sudo docker build -t fyipeproject/http-test-server:3.0.$CI_PIPELINE_IID ./http-test-server
        - sudo docker run -p 3010:3010 -d fyipeproject/http-test-server:3.0.$CI_PIPELINE_IID
        - sudo docker ps
        - sudo docker run --name fyipe --env-file ./backend/.env -e ENCRYPTION_KEY=$ENCRYPTION_KEY -e TEST_EMAIL_SMTP_PORT=$TEST_EMAIL_SMTP_PORT -e TEST_EMAIL_SMTP_SERVER=$TEST_EMAIL_SMTP_SERVER -e TEST_EMAIL=$TEST_EMAIL -e TEST_EMAIL_PASSWORD=$TEST_EMAIL_PASSWORD -e IS_SAAS_SERVICE=true -e IS_TESTING=true -e DOCKER_UNMASKED_USERNAME=$DOCKER_UNMASKED_USERNAME -e DOCKER_UNMASKED_PASSWORD=$DOCKER_UNMASKED_PASSWORD -e DOCKER_SECURITY_SCAN_REGISTRY_URL=$DOCKER_SECURITY_SCAN_REGISTRY_URL -e DOCKER_SECURITY_SCAN_IMAGE_PATH=$DOCKER_SECURITY_SCAN_IMAGE_PATH -e DOCKER_SECURITY_SCAN_IMAGE_TAGS=$DOCKER_SECURITY_SCAN_IMAGE_TAGS -e GITHUB_UNMASKED_USERNAME=$GITHUB_UNMASKED_USERNAME -e GITHUB_UNMASKED_PASSWORD=$GITHUB_UNMASKED_PASSWORD -e GITHUB_SECURITY_SCAN_REPOSITORY_URL=$GITHUB_SECURITY_SCAN_REPOSITORY_URL --net=host fyipeproject/backend:3.0.$CI_PIPELINE_IID npm test
        - chmod +x ./ci/scripts/storehash.sh
        - ./ci/scripts/storehash.sh build_n_test_backend backend init-script probe http-test-server
        - chmod +x ./ci/scripts/cleanup.sh
        - ./ci/scripts/cleanup.sh
    except:
        refs:
            - hotfix-master
            - hotfix-release

build_n_test_enterprise_backend:
    stage: BuildAndTest
    script:
        - chmod +x ./ci/scripts/checkhash.sh
        - export next_stage=`./ci/scripts/checkhash.sh build_n_test_enterprise_backend backend`
        - if [[ $next_stage == *"skip"* ]]; then exit ${CI_JOB_SKIP_EXIT_CODE:-0}; fi
        - curl -sSL https://get.docker.com/ | sh #Install docker.
        - sudo docker stop $(sudo docker ps -aq) || echo 'No docker containers'
        - sudo docker rm $(sudo docker ps -aq) || echo 'No docker containers'
        - sudo docker run --name mongo -p 27017:27017 -d mongo:4.2.3
        - sudo docker run --name bredis -p 6379:6379 -d redis:5.0.7 redis-server
        - sudo docker build -t fyipeproject/backend:3.0.$CI_PIPELINE_IID ./backend
        - sudo docker ps
        - sudo docker run --name fyipe --env-file ./backend/.env --net=host fyipeproject/backend:3.0.$CI_PIPELINE_IID npm run enterprise-test
        - chmod +x ./ci/scripts/storehash.sh
        - ./ci/scripts/storehash.sh build_n_test_enterprise_backend backend
        - chmod +x ./ci/scripts/cleanup.sh
        - ./ci/scripts/cleanup.sh
    except:
        refs:
            - hotfix-master
            - hotfix-release
