build_n_test_log-java:
    stage: BuildAndTest
    script:
        - chmod +x ./ci/scripts/checkhash.sh
        - export next_stage=`./ci/scripts/checkhash.sh build_n_test_log-java log-java backend`
        - if [[ $next_stage == *"skip"* ]]; then exit ${CI_JOB_SKIP_EXIT_CODE:-0}; fi
        - sudo apt-get update
        - curl -sSL https://get.docker.com/ | sh #Install docker.
        - sudo apt install -y gconf-service libasound2 libatk1.0-0 libc6 libcairo2 libcups2 libdbus-1-3 libexpat1 libfontconfig1 libgcc1 libgconf-2-4 libgdk-pixbuf2.0-0 libglib2.0-0 libgtk-3-0 libnspr4 libpango-1.0-0 libpangocairo-1.0-0 libstdc++6 libx11-6 libx11-xcb1 libxcb1 libxcomposite1 libxcursor1 libxdamage1 libxext6 libxfixes3 libxi6 libxrandr2 libxrender1 libxss1 libxtst6 ca-certificates fonts-liberation libappindicator1 libnss3 lsb-release xdg-utils wget
        - echo "Setup machine for running log java tests"
        - sudo docker stop $(sudo docker ps -aq) || echo 'No docker containers'
        - sudo docker rm $(sudo docker ps -aq) || echo 'No docker containers'
        - sudo docker run --name mongo -p 27017:27017 -d mongo:4.2.3
        - sudo docker run --name redis -p 6379:6379 -d redis:5.0.7 redis-server
        - sudo docker build -t fyipeproject/backend:3.0.$CI_PIPELINE_IID ./backend
        - sudo docker run --env-file ./backend/.env --net=host -d fyipeproject/backend:3.0.$CI_PIPELINE_IID
        - sudo docker ps
        - sudo apt-get install -y maven
        # - sudo update-alternatives --config java
        # - sudo apt install -y default-jdk
        # - sudo apt-get install -y openjdk-8-jdk
        # - sudo update-alternatives --set java /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
        # - sudo rm /etc/ssl/certs/java/cacerts
        # - sudo /var/lib/dpkg/info/ca-certificates-java.postinst configure
        # - sudo update-ca-certificates -f
        # - sudo apt install ca-certificates-java --reinstall
        - sudo apt-get remove -y --purge openjdk* java-common default-jdk
        - sudo apt-get autoremove -y  --purge
        - sudo apt-get install -y openjdk-8-jdk
        # - sudo update-alternatives --config java
        - cp -f log-java/.m2/settings.xml $HOME/.m2/settings.xml
        - cd log-java
        - mvn -e -X clean test
        - cd ..
        - chmod +x ./ci/scripts/storehash.sh
        - ./ci/scripts/storehash.sh build_n_test_log-java log-java backend
        - chmod +x ./ci/scripts/cleanup.sh
        - ./ci/scripts/cleanup.sh
    except:
        refs:
            - hotfix-master
            - hotfix-release
