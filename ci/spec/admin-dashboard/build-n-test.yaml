test_admin-dashboard:
    stage: BuildAndTest
    script:
        - chmod +x ./ci/scripts/checkhash.sh
        - export next_stage=`./ci/scripts/checkhash.sh test_admin-dashboard admin-dashboard`
        - if [[ $next_stage == *"skip"* ]]; then exit ${CI_JOB_SKIP_EXIT_CODE:-0}; fi
        - curl -sSL https://get.docker.com/ | sh #Install docker.
        - cd admin-dashboard
        - npm ci
          # try building, if there are warnings then this will fail
        - npm run build
        - echo "No test implemented"
        - cd ..
        - chmod +x ./ci/scripts/storehash.sh
        - ./ci/scripts/storehash.sh test_admin-dashboard admin-dashboard
        - chmod +x ./ci/scripts/cleanup.sh
        - ./ci/scripts/cleanup.sh
    except:
        refs:
            - hotfix-master
            - hotfix-release

test_enterprise_admin-dashboard:
    stage: BuildAndTest
    script:
        - chmod +x ./ci/scripts/checkhash.sh
        - export next_stage=`./ci/scripts/checkhash.sh test_enterprise_admin-dashboard backend accounts licensing admin-dashboard`
        - if [[ $next_stage == *"skip"* ]]; then exit ${CI_JOB_SKIP_EXIT_CODE:-0}; fi
        - sudo apt-get update
        - curl -sSL https://get.docker.com/ | sh #Install docker.
        - sudo apt install -y gconf-service libasound2 libatk1.0-0 libc6 libcairo2 libcups2 libdbus-1-3 libexpat1 libfontconfig1 libgcc1 libgconf-2-4 libgdk-pixbuf2.0-0 libglib2.0-0 libgtk-3-0 libnspr4 libpango-1.0-0 libpangocairo-1.0-0 libstdc++6 libx11-6 libx11-xcb1 libxcb1 libxcomposite1 libxcursor1 libxdamage1 libxext6 libxfixes3 libxi6 libxrandr2 libxrender1 libxss1 libxtst6 ca-certificates fonts-liberation libappindicator1 libnss3 lsb-release xdg-utils wget libgbm-dev
        - echo "Setup machine for running puppeteer tests"
        - sudo docker stop $(sudo docker ps -aq) || echo 'No docker containers'
        - sudo docker rm $(sudo docker ps -aq) || echo 'No docker containers'
        - sudo docker run --name mongo -p 27017:27017 -d mongo:4.2.3
        - sudo docker run --name redis -p 6379:6379 -d redis:5.0.7 redis-server
        - sudo docker build -t fyipeproject/backend:3.0.$CI_PIPELINE_IID ./backend
        - sudo docker run --env-file ./backend/.env -e ENCRYPTION_KEY=$ENCRYPTION_KEY -e IS_TESTING=true --net=host -d fyipeproject/backend:3.0.$CI_PIPELINE_IID
        - sudo docker build -t fyipeproject/licensing:3.0.$CI_PIPELINE_IID ./licensing
        - sudo docker run --env-file ./licensing/.env -p 3004:3004 -d fyipeproject/licensing:3.0.$CI_PIPELINE_IID
        - sudo docker build -t fyipeproject/helm-chart:3.0.$CI_PIPELINE_IID ./helm-chart
        - sudo docker run --env-file ./helm-chart/.env -p 3423:3423 -d fyipeproject/helm-chart:3.0.$CI_PIPELINE_IID
        - sudo docker build -t fyipeproject/api-docs:3.0.$CI_PIPELINE_IID ./api-docs
        - sudo docker run --env-file ./api-docs/.env -p 1445:1445 -d fyipeproject/api-docs:3.0.$CI_PIPELINE_IID
        - sudo docker build -t fyipeproject/accounts:3.0.$CI_PIPELINE_IID ./accounts
        - sudo docker run --env-file ./accounts/.env -p 3003:3003 -d fyipeproject/accounts:3.0.$CI_PIPELINE_IID
        - sudo docker build -t fyipeproject/admin-dashboard:3.0.$CI_PIPELINE_IID ./admin-dashboard
        - sudo docker run --env-file ./admin-dashboard/.env -p 3100:3100 -d fyipeproject/admin-dashboard:3.0.$CI_PIPELINE_IID
        - sudo docker build -t fyipeproject/dashboard:3.0.$CI_PIPELINE_IID ./dashboard
        - sudo docker run --env-file ./dashboard/.env -p 3000:3000 -d fyipeproject/dashboard:3.0.$CI_PIPELINE_IID
        - sudo docker ps
        - cd admin-dashboard
        - npm ci
        # try building, if there are warnings then this will fail
        - npm run build
        - TEST_EMAIL_SMTP_PORT=$TEST_EMAIL_SMTP_PORT TEST_EMAIL_SMTP_SERVER=$TEST_EMAIL_SMTP_SERVER TEST_EMAIL=$TEST_EMAIL TEST_EMAIL_PASSWORD=$TEST_EMAIL_PASSWORD npm run enterprise-test
        - cd ..
        - chmod +x ./ci/scripts/storehash.sh
        - ./ci/scripts/storehash.sh test_enterprise_admin-dashboard admin-dashboard backend accounts licensing
        - chmod +x ./ci/scripts/cleanup.sh
        - ./ci/scripts/cleanup.sh
    except:
        refs:
            - hotfix-master
            - hotfix-release
