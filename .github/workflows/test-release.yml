name: Test Image Deploy to DockerHub

on:
  push:
    branches:
      - "master"

jobs:

  generate-build-number:
    runs-on: ubuntu-latest
    outputs:
      build_number: ${{ steps.buildnumber.outputs.build_number }}
    steps:
    - name: Generate build number
      id: buildnumber
      uses: onyxmueller/build-tag-number@v1.0.2
      with:
        token: ${{secrets.github_token}}
    - run: echo "Build number is ${{ steps.buildnumber.outputs.build_number }}"

  github-release:
    needs: generate-build-number
    runs-on: ubuntu-latest
    permissions:
      contents: write
    env:
      ONEUPTIME_VERSION: "7.0.${{needs.generate-build-number.outputs.build_number}}"
    steps:
      - uses: actions/checkout@v3
        with:
          ref: release
      - run: echo "${{needs.generate-build-number.outputs.build_number}}"
      - name: "Build Changelog"
        id: build_changelog
        uses: mikepenz/release-changelog-builder-action@v3.7.1
      - uses: ncipollo/release-action@v1
        with:
          tag: ${{env.ONEUPTIME_VERSION}}
          artifactErrorsFailBuild: true
          body: |
            ${{steps.build_changelog.outputs.changelog}}

  nginx-test-docker-image-deploy:
    needs: generate-build-number
    runs-on: ubuntu-latest
    env:
      ONEUPTIME_VERSION: "7.0.${{needs.generate-build-number.outputs.build_number}}"
    steps:
      - uses: actions/checkout@v3
        with:
          ref: release

      - uses: actions/setup-node@v2
        with:
          node-version: 18.3.0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Generate Dockerfile from Dockerfile.tpl
        run: npm run prerun

      # Build and deploy nginx.

      - name: Login to Docker Hub 
        uses: docker/login-action@v2.2.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2.2.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          file: ./Nginx/Dockerfile
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            oneuptime/nginx:$ONEUPTIME_VERSION-test
            oneuptime/nginx:test
            ghcr.io/oneuptime/nginx:$ONEUPTIME_VERSION-test
            ghcr.io/oneuptime/nginx:test

  test-server-test-docker-image-deploy:
    needs: generate-build-number
    runs-on: ubuntu-latest
    env:
      ONEUPTIME_VERSION: "7.0.${{needs.generate-build-number.outputs.build_number}}"
    steps:
      - uses: actions/checkout@v3
        with:
          ref: release

      - uses: actions/setup-node@v2
        with:
          node-version: 18.3.0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Generate Dockerfile from Dockerfile.tpl
        run: npm run prerun

      # Build and deploy test-server.

      - name: Login to Docker Hub 
        uses: docker/login-action@v2.2.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2.2.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          file: ./TestServer/Dockerfile
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            oneuptime/test-server:$ONEUPTIME_VERSION-test
            oneuptime/test-server:test
            ghcr.io/oneuptime/test-server:$ONEUPTIME_VERSION-test
            ghcr.io/oneuptime/test-server:test

  workflow-test-docker-image-deploy:
    needs: generate-build-number
    runs-on: ubuntu-latest
    env:
      ONEUPTIME_VERSION: "7.0.${{needs.generate-build-number.outputs.build_number}}"
    steps:
      - uses: actions/checkout@v3
        with:
          ref: release

      - uses: actions/setup-node@v2
        with:
          node-version: 18.3.0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Generate Dockerfile from Dockerfile.tpl
        run: npm run prerun

      # Build and deploy workflow.

      - name: Login to Docker Hub 
        uses: docker/login-action@v2.2.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2.2.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          file: ./Workflow/Dockerfile
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            oneuptime/workflow:$ONEUPTIME_VERSION-test
            oneuptime/workflow:test
            ghcr.io/oneuptime/workflow:$ONEUPTIME_VERSION-test
            ghcr.io/oneuptime/workflow:test

  link-shortner-test-docker-image-deploy:
    needs: generate-build-number
    runs-on: ubuntu-latest
    env:
      ONEUPTIME_VERSION: "7.0.${{needs.generate-build-number.outputs.build_number}}"
    steps:
      - uses: actions/checkout@v3
        with:
          ref: release

      - uses: actions/setup-node@v2
        with:
          node-version: 18.3.0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Generate Dockerfile from Dockerfile.tpl
        run: npm run prerun

      # Build and deploy link-shortner.

      - name: Login to Docker Hub 
        uses: docker/login-action@v2.2.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2.2.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          file: ./LinkShortner/Dockerfile
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            oneuptime/link-shortner:$ONEUPTIME_VERSION-test
            oneuptime/link-shortner:test
            ghcr.io/oneuptime/link-shortner:$ONEUPTIME_VERSION-test
            ghcr.io/oneuptime/link-shortner:test

  workers-test-docker-image-deploy:
    needs: generate-build-number
    runs-on: ubuntu-latest
    env:
      ONEUPTIME_VERSION: "7.0.${{needs.generate-build-number.outputs.build_number}}"
    steps:
      - uses: actions/checkout@v3
        with:
          ref: release

      - uses: actions/setup-node@v2
        with:
          node-version: 18.3.0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Generate Dockerfile from Dockerfile.tpl
        run: npm run prerun

      # Build and deploy workers.

      - name: Login to Docker Hub 
        uses: docker/login-action@v2.2.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2.2.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          file: ./Workers/Dockerfile
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            oneuptime/workers:$ONEUPTIME_VERSION-test
            oneuptime/workers:test
            ghcr.io/oneuptime/workers:$ONEUPTIME_VERSION-test
            ghcr.io/oneuptime/workers:test

  status-page-test-docker-image-deploy:
    needs: generate-build-number
    runs-on: ubuntu-latest
    env:
      ONEUPTIME_VERSION: "7.0.${{needs.generate-build-number.outputs.build_number}}"
    steps:
      - uses: actions/checkout@v3
        with:
          ref: release

      - uses: actions/setup-node@v2
        with:
          node-version: 18.3.0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Generate Dockerfile from Dockerfile.tpl
        run: npm run prerun

      # Build and deploy status-page.

      - name: Login to Docker Hub 
        uses: docker/login-action@v2.2.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2.2.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          file: ./StatusPage/Dockerfile
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            oneuptime/status-page:$ONEUPTIME_VERSION-test
            oneuptime/status-page:test
            ghcr.io/oneuptime/status-page:$ONEUPTIME_VERSION-test
            ghcr.io/oneuptime/status-page:test

  realtime-test-docker-image-deploy:
    needs: generate-build-number
    runs-on: ubuntu-latest
    env:
      ONEUPTIME_VERSION: "7.0.${{needs.generate-build-number.outputs.build_number}}"
    steps:
      - uses: actions/checkout@v3
        with:
          ref: release

      - uses: actions/setup-node@v2
        with:
          node-version: 18.3.0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Generate Dockerfile from Dockerfile.tpl
        run: npm run prerun

      # Build and deploy realtime.

      - name: Login to Docker Hub 
        uses: docker/login-action@v2.2.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2.2.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          file: ./Realtime/Dockerfile
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            oneuptime/realtime:$ONEUPTIME_VERSION-test
            oneuptime/realtime:test
            ghcr.io/oneuptime/realtime:$ONEUPTIME_VERSION-test
            ghcr.io/oneuptime/realtime:test

  probe-api-test-docker-image-deploy:
    needs: generate-build-number
    runs-on: ubuntu-latest
    env:
      ONEUPTIME_VERSION: "7.0.${{needs.generate-build-number.outputs.build_number}}"
    steps:
      - uses: actions/checkout@v3
        with:
          ref: release

      - uses: actions/setup-node@v2
        with:
          node-version: 18.3.0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Generate Dockerfile from Dockerfile.tpl
        run: npm run prerun

      # Build and deploy probe-api.

      - name: Login to Docker Hub 
        uses: docker/login-action@v2.2.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2.2.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          file: ./ProbeAPI/Dockerfile
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            oneuptime/probe-api:$ONEUPTIME_VERSION-test
            oneuptime/probe-api:test
            ghcr.io/oneuptime/probe-api:$ONEUPTIME_VERSION-test
            ghcr.io/oneuptime/probe-api:test

  notification-test-docker-image-deploy:
    needs: generate-build-number
    runs-on: ubuntu-latest
    env:
      ONEUPTIME_VERSION: "7.0.${{needs.generate-build-number.outputs.build_number}}"
    steps:
      - uses: actions/checkout@v3
        with:
          ref: release

      - uses: actions/setup-node@v2
        with:
          node-version: 18.3.0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Generate Dockerfile from Dockerfile.tpl
        run: npm run prerun

        # Build and deploy notification.

      - name: Login to Docker Hub 
        uses: docker/login-action@v2.2.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2.2.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          file: ./Notification/Dockerfile
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            oneuptime/notification:$ONEUPTIME_VERSION-test
            oneuptime/notification:test
            ghcr.io/oneuptime/notification:$ONEUPTIME_VERSION-test
            ghcr.io/oneuptime/notification:test

  licensing-test-docker-image-deploy:
    needs: generate-build-number
    runs-on: ubuntu-latest
    env:
      ONEUPTIME_VERSION: "7.0.${{needs.generate-build-number.outputs.build_number}}"
    steps:
      - uses: actions/checkout@v3
        with:
          ref: release

      - uses: actions/setup-node@v2
        with:
          node-version: 18.3.0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Generate Dockerfile from Dockerfile.tpl
        run: npm run prerun

      # Build and deploy licensing.

      - name: Login to Docker Hub 
        uses: docker/login-action@v2.2.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2.2.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          file: ./Licensing/Dockerfile
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            oneuptime/licensing:$ONEUPTIME_VERSION-test
            oneuptime/licensing:test
            ghcr.io/oneuptime/licensing:$ONEUPTIME_VERSION-test
            ghcr.io/oneuptime/licensing:test

  integrations-test-docker-image-deploy:
    needs: generate-build-number
    runs-on: ubuntu-latest
    env:
      ONEUPTIME_VERSION: "7.0.${{needs.generate-build-number.outputs.build_number}}"
    steps:
      - uses: actions/checkout@v3
        with:
          ref: release

      - uses: actions/setup-node@v2
        with:
          node-version: 18.3.0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Generate Dockerfile from Dockerfile.tpl
        run: npm run prerun

      # Build and deploy integrations.

      - name: Login to Docker Hub 
        uses: docker/login-action@v2.2.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2.2.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          file: ./Integration/Dockerfile
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            oneuptime/integrations:$ONEUPTIME_VERSION-test
            oneuptime/integrations:test
            ghcr.io/oneuptime/integrations:$ONEUPTIME_VERSION-test
            ghcr.io/oneuptime/integrations:test

  probe-test-docker-image-deploy:
    needs: generate-build-number
    runs-on: ubuntu-latest
    env:
      ONEUPTIME_VERSION: "7.0.${{needs.generate-build-number.outputs.build_number}}"
    steps:
      - uses: actions/checkout@v3
        with:
          ref: release

      - uses: actions/setup-node@v2
        with:
          node-version: 18.3.0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Generate Dockerfile from Dockerfile.tpl
        run: npm run prerun

      # Build and deploy probe.

      - name: Login to Docker Hub 
        uses: docker/login-action@v2.2.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2.2.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          file: ./Probe/Dockerfile
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            oneuptime/probe:$ONEUPTIME_VERSION-test
            oneuptime/probe:test
            ghcr.io/oneuptime/probe:$ONEUPTIME_VERSION-test
            ghcr.io/oneuptime/probe:test

  identity-test-docker-image-deploy:
    needs: generate-build-number
    runs-on: ubuntu-latest
    env:
      ONEUPTIME_VERSION: "7.0.${{needs.generate-build-number.outputs.build_number}}"
    steps:
      - uses: actions/checkout@v3
        with:
          ref: release

      - uses: actions/setup-node@v2
        with:
          node-version: 18.3.0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Generate Dockerfile from Dockerfile.tpl
        run: npm run prerun

      # Build and deploy identity.

      - name: Login to Docker Hub 
        uses: docker/login-action@v2.2.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2.2.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          file: ./Identity/Dockerfile
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            oneuptime/identity:$ONEUPTIME_VERSION-test
            oneuptime/identity:test
            ghcr.io/oneuptime/identity:$ONEUPTIME_VERSION-test
            ghcr.io/oneuptime/identity:test

  home-test-docker-image-deploy:
    needs: generate-build-number
    runs-on: ubuntu-latest
    env:
      ONEUPTIME_VERSION: "7.0.${{needs.generate-build-number.outputs.build_number}}"
    steps:
      - uses: actions/checkout@v3
        with:
          ref: release

      - uses: actions/setup-node@v2
        with:
          node-version: 18.3.0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Generate Dockerfile from Dockerfile.tpl
        run: npm run prerun

      # Build and deploy home.

      - name: Login to Docker Hub 
        uses: docker/login-action@v2.2.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2.2.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          file: ./Home/Dockerfile
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            oneuptime/home:$ONEUPTIME_VERSION-test
            oneuptime/home:test
            ghcr.io/oneuptime/home:$ONEUPTIME_VERSION-test
            ghcr.io/oneuptime/home:test

  helm-chart-test-docker-image-deploy:
    needs: generate-build-number
    runs-on: ubuntu-latest
    env:
      ONEUPTIME_VERSION: "7.0.${{needs.generate-build-number.outputs.build_number}}"
    steps:
      - uses: actions/checkout@v3
        with:
          ref: release

      - uses: actions/setup-node@v2
        with:
          node-version: 18.3.0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Generate Dockerfile from Dockerfile.tpl
        run: npm run prerun

      # Build and deploy helm-chart.

      - name: Login to Docker Hub 
        uses: docker/login-action@v2.2.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2.2.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          file: ./HelmChart/Dockerfile
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            oneuptime/helm-chart:$ONEUPTIME_VERSION-test
            oneuptime/helm-chart:test
            ghcr.io/oneuptime/helm-chart:$ONEUPTIME_VERSION-test
            ghcr.io/oneuptime/helm-chart:test

  haraka-test-docker-image-deploy:
    needs: generate-build-number
    runs-on: ubuntu-latest
    env:
      ONEUPTIME_VERSION: "7.0.${{needs.generate-build-number.outputs.build_number}}"
    steps:
      - uses: actions/checkout@v3
        with:
          ref: release

      - uses: actions/setup-node@v2
        with:
          node-version: 18.3.0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Generate Dockerfile from Dockerfile.tpl
        run: npm run prerun

      # Build and deploy haraka.

      - name: Login to Docker Hub 
        uses: docker/login-action@v2.2.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2.2.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          file: ./Haraka/Dockerfile
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            oneuptime/haraka:$ONEUPTIME_VERSION-test
            oneuptime/haraka:test
            ghcr.io/oneuptime/haraka:$ONEUPTIME_VERSION-test
            ghcr.io/oneuptime/haraka:test

  file-test-docker-image-deploy:
    needs: generate-build-number
    runs-on: ubuntu-latest
    env:
      ONEUPTIME_VERSION: "7.0.${{needs.generate-build-number.outputs.build_number}}"
    steps:
      - uses: actions/checkout@v3
        with:
          ref: release

      - uses: actions/setup-node@v2
        with:
          node-version: 18.3.0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Generate Dockerfile from Dockerfile.tpl
        run: npm run prerun

      # Build and deploy file.

      - name: Login to Docker Hub 
        uses: docker/login-action@v2.2.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2.2.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          file: ./File/Dockerfile
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            oneuptime/file:$ONEUPTIME_VERSION-test
            oneuptime/file:test
            ghcr.io/oneuptime/file:$ONEUPTIME_VERSION-test
            ghcr.io/oneuptime/file:test

  dashboard-test-docker-image-deploy:
    needs: generate-build-number
    runs-on: ubuntu-latest
    env:
      ONEUPTIME_VERSION: "7.0.${{needs.generate-build-number.outputs.build_number}}"
    steps:
      - uses: actions/checkout@v3
        with:
          ref: release

      - uses: actions/setup-node@v2
        with:
          node-version: 18.3.0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Generate Dockerfile from Dockerfile.tpl
        run: npm run prerun

      # Build and deploy dashboard.

      - name: Login to Docker Hub 
        uses: docker/login-action@v2.2.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2.2.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          file: ./Dashboard/Dockerfile
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            oneuptime/dashboard:$ONEUPTIME_VERSION-test
            oneuptime/dashboard:test
            ghcr.io/oneuptime/dashboard:$ONEUPTIME_VERSION-test
            ghcr.io/oneuptime/dashboard:test

  dashboard-api-test-docker-image-deploy:
    needs: generate-build-number
    runs-on: ubuntu-latest
    env:
      ONEUPTIME_VERSION: "7.0.${{needs.generate-build-number.outputs.build_number}}"
    steps:
      - uses: actions/checkout@v3
        with:
          ref: release

      - uses: actions/setup-node@v2
        with:
          node-version: 18.3.0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Generate Dockerfile from Dockerfile.tpl
        run: npm run prerun

      # Build and deploy dashboard-api.

      - name: Login to Docker Hub 
        uses: docker/login-action@v2.2.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2.2.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          file: ./DashboardAPI/Dockerfile
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            oneuptime/dashboard-api:$ONEUPTIME_VERSION-test
            oneuptime/dashboard-api:test
            ghcr.io/oneuptime/dashboard-api:$ONEUPTIME_VERSION-test
            ghcr.io/oneuptime/dashboard-api:test

  api-reference-test-docker-image-deploy:
    needs: generate-build-number
    runs-on: ubuntu-latest
    env:
      ONEUPTIME_VERSION: "7.0.${{needs.generate-build-number.outputs.build_number}}"
    steps:
      - uses: actions/checkout@v3
        with:
          ref: release

      - uses: actions/setup-node@v2
        with:
          node-version: 18.3.0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Generate Dockerfile from Dockerfile.tpl
        run: npm run prerun

      # Build and deploy api-reference.

      - name: Login to Docker Hub 
        uses: docker/login-action@v2.2.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2.2.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          file: ./ApiReference/Dockerfile
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            oneuptime/api-reference:$ONEUPTIME_VERSION-test
            oneuptime/api-reference:test
            ghcr.io/oneuptime/api-reference:$ONEUPTIME_VERSION-test
            ghcr.io/oneuptime/api-reference:test

  accounts-test-docker-image-deploy:
    needs: generate-build-number
    runs-on: ubuntu-latest
    env:
      ONEUPTIME_VERSION: "7.0.${{needs.generate-build-number.outputs.build_number}}"
    steps:
      - uses: actions/checkout@v3
        with:
          ref: release

      - uses: actions/setup-node@v2
        with:
          node-version: 18.3.0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Generate Dockerfile from Dockerfile.tpl
        run: npm run prerun

      # Build and deploy accounts.

      - name: Login to Docker Hub 
        uses: docker/login-action@v2.2.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2.2.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          file: ./Accounts/Dockerfile
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            oneuptime/accounts:$ONEUPTIME_VERSION-test
            oneuptime/accounts:test
            ghcr.io/oneuptime/accounts:$ONEUPTIME_VERSION-test
            ghcr.io/oneuptime/accounts:test
