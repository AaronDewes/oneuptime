version: '3.7'
services:
    mongo:
        image: mongo:4.2.3
        ports:
            - '27017:27017'
        volumes:
            - mongodata:/data/db
    saml:
        image: kenchan0130/simplesamlphp
        ports:
            - 9876:8080
            - 8443:8443
        environment:
            - SIMPLESAMLPHP_SP_ENTITY_ID=hackerbay.io
            - SIMPLESAMLPHP_SP_ASSERTION_CONSUMER_SERVICE=http://localhost:3002/api/user/sso/callback
            - SIMPLESAMLPHP_SP_SINGLE_LOGOUT_SERVICE=http://localhost/simplesaml/module.php/saml/sp/saml2-logout.php/test-sp
        volumes:
            - ./saml/users.php:/var/www/simplesamlphp/config/authsources.php

    redis:
        image: redis:5.0.7
        ports:
            - '6379:6379'
        command: redis-server
    backend:
        ports:
            - '3002:3002'
        build: ./backend
        env_file:
            - ./backend/.env
        environment:
            - MONGO_URL=mongodb://mongo:27017/fyipedb
            - REDIS_HOST=redis
            - IS_SAAS_SERVICE=${IS_SAAS_SERVICE}
            - SCRIPT_RUNNER_URL=http://script-runner:3009
            - CLUSTER_KEY=test
        depends_on:
            - mongo
            - redis
            - haraka
            - script-runner
    accounts:
        ports:
            - '3003:3003'
        build: ./accounts
        env_file:
            - ./accounts/.env
        environment:
            - IS_SAAS_SERVICE=${IS_SAAS_SERVICE}
        depends_on:
            - backend
    dashboard:
        ports:
            - '3000:3000'
        build: ./dashboard
        env_file:
            - ./dashboard/.env
        environment:
            - IS_SAAS_SERVICE=${IS_SAAS_SERVICE}
        depends_on:
            - backend
            - accounts
    home:
        ports:
            - '1444:1444'
        env_file:
            - ./home/.env
        environment:
            - IS_SAAS_SERVICE=${IS_SAAS_SERVICE}
        build: ./home
    status-page:
        ports:
            - '3006:3006'
        build: ./status-page
        env_file:
            - ./status-page/.env
        environment:
            - IS_SAAS_SERVICE=${IS_SAAS_SERVICE}
        depends_on:
            - backend
            - accounts
            - dashboard
    admin-dashboard:
        ports:
            - '3100:3100'
        build: ./admin-dashboard
        env_file:
            - ./admin-dashboard/.env
        environment:
            - IS_SAAS_SERVICE=${IS_SAAS_SERVICE}
        depends_on:
            - backend
            - accounts
    http-test-server:
        ports:
            - '3010:3010'
        env_file:
            - ./http-test-server/.env
        environment:
            - IS_SAAS_SERVICE=${IS_SAAS_SERVICE}
        build: ./http-test-server
    licensing:
        ports:
            - '3004:3004'
        env_file:
            - ./licensing/.env
        environment:
            - IS_SAAS_SERVICE=${IS_SAAS_SERVICE}
        build: ./licensing
    data-ingestor:
        ports:
            - '3200:3200'
        build: ./data-ingestor
        env_file:
            - ./data-ingestor/.env
        environment:
            - SERVER_URL=http://backend:3002
            - CLUSTER_KEY=test
            - SCRIPT_RUNNER_URL=http://script-runner:3009
            - MONGO_URL=mongodb://mongo:27017/fyipedb
        depends_on:
            - mongo
            - script-runner
            - backend
    realtime:
        ports:
            - '3300:3300'
        build: ./realtime
        env_file:
            - ./realtime/.env
        environment:
            - CLUSTER_KEY=test
            - PORT=3300
    probe1:
        ports:
            - '3024:3024'
        build: ./probe
        env_file:
            - ./probe/.env
        environment:
            - PORT=3024
            - SERVER_URL=http://backend:3002
            - PROBE_NAME=Probe 1
            - PROBE_KEY=test-key
            - IS_SAAS_SERVICE=${IS_SAAS_SERVICE}
            - CLUSTER_KEY=test
            - DATA_INGESTOR_URL=http://data-ingestor:3200
        depends_on:
            - backend
            - data-ingestor
    probe2:
        ports:
            - '3025:3025'
        build: ./probe
        env_file:
            - ./probe/.env
        environment:
            - PORT=3025
            - SERVER_URL=http://backend:3002
            - PROBE_NAME=Probe 2
            - PROBE_KEY=test-key
            - IS_SAAS_SERVICE=${IS_SAAS_SERVICE}
            - CLUSTER_KEY=test
            - DATA_INGESTOR_URL=http://data-ingestor:3200
        depends_on:
            - backend
            - data-ingestor
    api-docs:
        ports:
            - '1445:1445'
        build: ./api-docs
        env_file:
            - ./api-docs/.env
        environment:
            - IS_SAAS_SERVICE=${IS_SAAS_SERVICE}
    init-script:
        build: ./init-script
        ports:
            - '1447:1447'
        env_file:
            - ./init-script/.env
        environment:
            - MONGO_URL=mongodb://mongo:27017/fyipedb
            - REDIS_HOST=redis
            - IS_SAAS_SERVICE=${IS_SAAS_SERVICE}
            - NODE_ENV=${NODE_ENV}
        depends_on:
            - mongo
            - redis
    ##IMPORTANT:
    ## This container is an SMTP server used to send emails.
    ## Setup private, tls_cert and tls_key keys before running this part
    haraka:
        ports:
            - '2525:2525'
        build:
            context: ./haraka
            args:
                PORT: '2525'
        environment:
            - SMTP_USER=user@fyipe.com
            - SMTP_PASSWORD=fyipe
            - DOMAIN="${DOMAIN}"
            - DKIM_PRIVATE_KEY="${DKIM_PRIVATE_KEY}"
            - TLS_CERT="${TLS_CERT}"
            - TLS_KEY="${TLS_KEY}"
    script-runner:
        ports:
            - '3009:3009'
        build: ./script-runner
        env_file:
            - ./script-runner/.env
        environment:
            - IS_SAAS_SERVICE=${IS_SAAS_SERVICE}
            - SERVER_URL=http://backend:3002
            - CLUSTER_KEY=test
    application-scanner:
        ports:
            - '3005:3005'
        build: ./application-scanner
        env_file:
            - ./application-scanner/.env
        environment:
            - PORT=3005
            - SERVER_URL=http://backend:3002
            - IS_SAAS_SERVICE=${IS_SAAS_SERVICE}
            - CLUSTER_KEY=test
        depends_on:
            - backend
    container-scanner:
        ports:
            - '3055:3055'
        build: ./container-scanner
        env_file:
            - ./container-scanner/.env
        environment:
            - PORT=3055
            - SERVER_URL=http://backend:3002
            - IS_SAAS_SERVICE=${IS_SAAS_SERVICE}
            - CLUSTER_KEY=test
        depends_on:
            - backend
    lighthouse-runner:
        ports:
            - '3015:3015'
        build: ./lighthouse-runner
        env_file:
            - ./lighthouse-runner/.env
        environment:
            - PORT=3015
            - SERVER_URL=http://backend:3002
            - IS_SAAS_SERVICE=${IS_SAAS_SERVICE}
            - CLUSTER_KEY=test
        depends_on:
            - backend

volumes:
    mongodata:
