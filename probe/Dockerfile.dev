#
# Fyipe-backend Dockerfile
#

# Pull base image nodejs image.
FROM node:16

#SET ENV Variables
ENV CHROME_PATH=/usr/bin/google-chrome

WORKDIR /usr/src/app

# Install Chrome.
RUN \
  wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - && \
  echo "deb http://dl.google.com/linux/chrome/deb/ stable main" > /etc/apt/sources.list.d/google.list && \
  apt-get update && \
  apt-get install -y google-chrome-stable && \
  rm -rf /var/lib/apt/lists/*


# Install trivy for container scanning
RUN curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/master/contrib/install.sh | sh -s -- -b /usr/local/bin

# Install kubectl for kubernetes monitor scanning
RUN curl -LO "https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"
RUN chmod +x ./kubectl
RUN mv ./kubectl /usr/local/bin/kubectl && \
  chown root: /usr/local/bin/kubectl

# Install app dependencies
RUN cd /usr/src/app

# Copy package.json files
COPY ./package.json /usr/src/app/package.json
COPY ./package-lock.json /usr/src/app/package-lock.json

RUN npm install

# Expose ports.
#   - 3008: probe
EXPOSE 3008

# Expose Debugging port.
EXPOSE 9229

#Run the app
CMD [ "npm", "run", "dev"]

